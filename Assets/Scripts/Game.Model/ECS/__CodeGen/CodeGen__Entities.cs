
//------------------------------------------------------------------------------    
// <auto-generated>                                                                 
//     This code was generated by GamesTan.Tools.MacroExpansion, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null. 
//     https://github.com/JiepengTan/LockstepECS                                         
//     Changes to this file may cause incorrect behavior and will be lost if        
//     the code is regenerated.                                                     
// </auto-generated>                                                                
//------------------------------------------------------------------------------  

//Power by ME //src: https://github.com/JiepengTan/ME  

//#define DONT_USE_GENERATE_CODE                                                                 
                                                                                                 
using System.Linq;                                                                               
using System.Runtime.InteropServices;                                                            
using System;                                                                                    
using System.Collections.Generic;                                                                
using System.Collections;                                                                        
using System.Runtime.CompilerServices;                                                           
using Lockstep.Game;                                                                             
using Lockstep.Math;                                                                             
using Unity.Burst;                                                                               
using Unity.Mathematics;                                                                                                                                                                            
namespace GamesTan.ECS.Game {  
    using GamesTan.ECSInternal;
    [StructLayout(LayoutKind.Sequential, Pack = Define.PackSize)]
    public unsafe partial class _EntityManager :InternalBaseEntityManager{

#region Size Offset of Entity Field
        private NativeArray<T> _GetAllPClassA_AssetData<T>(int compFieldOffset,FuncEntityFilter<Entity> filterFunc,out int length) where T: unmanaged{return _GetAllEntityField<T,PClassA>(_PClassAAry,_GetOffsetOfPClassA_AssetData() + compFieldOffset,filterFunc,out length);}
        private NativeArray<T> _GetAllPClassA_AssetData<T>(int compFieldOffset) where T: unmanaged{return _GetAllEntityField<T,PClassA>(_PClassAAry,_GetOffsetOfPClassA_AssetData()+ compFieldOffset);}
        private NativeArray<AssetData> _GetAllPClassA_AssetData(){return _GetAllEntityField<AssetData,PClassA>(_PClassAAry,_GetOffsetOfPClassA_AssetData());} 
        private int _GetOffsetOfPClassA_AssetData(){ var tempObj =  new PClassA(); PClassA* ptr = &tempObj;var filedPtr = &(ptr->AssetData);  return (int)((long) filedPtr - (long) ptr);        }
        private NativeArray<T> _GetAllPClassA_Transform3D<T>(int compFieldOffset,FuncEntityFilter<Entity> filterFunc,out int length) where T: unmanaged{return _GetAllEntityField<T,PClassA>(_PClassAAry,_GetOffsetOfPClassA_TransformData() + compFieldOffset,filterFunc,out length);}
        private NativeArray<T> _GetAllPClassA_Transform3D<T>(int compFieldOffset) where T: unmanaged{return _GetAllEntityField<T,PClassA>(_PClassAAry,_GetOffsetOfPClassA_TransformData()+ compFieldOffset);}
        private NativeArray<Transform3D> _GetAllPClassA_TransformData(){return _GetAllEntityField<Transform3D,PClassA>(_PClassAAry,_GetOffsetOfPClassA_TransformData());} 
        private int _GetOffsetOfPClassA_TransformData(){ var tempObj =  new PClassA(); PClassA* ptr = &tempObj;var filedPtr = &(ptr->TransformData);  return (int)((long) filedPtr - (long) ptr);        }
        private NativeArray<T> _GetAllPClassA_BasicData<T>(int compFieldOffset,FuncEntityFilter<Entity> filterFunc,out int length) where T: unmanaged{return _GetAllEntityField<T,PClassA>(_PClassAAry,_GetOffsetOfPClassA_BasicData() + compFieldOffset,filterFunc,out length);}
        private NativeArray<T> _GetAllPClassA_BasicData<T>(int compFieldOffset) where T: unmanaged{return _GetAllEntityField<T,PClassA>(_PClassAAry,_GetOffsetOfPClassA_BasicData()+ compFieldOffset);}
        private NativeArray<BasicData> _GetAllPClassA_BasicData(){return _GetAllEntityField<BasicData,PClassA>(_PClassAAry,_GetOffsetOfPClassA_BasicData());} 
        private int _GetOffsetOfPClassA_BasicData(){ var tempObj =  new PClassA(); PClassA* ptr = &tempObj;var filedPtr = &(ptr->BasicData);  return (int)((long) filedPtr - (long) ptr);        }
        private NativeArray<T> _GetAllPClassA_PhysicData<T>(int compFieldOffset,FuncEntityFilter<Entity> filterFunc,out int length) where T: unmanaged{return _GetAllEntityField<T,PClassA>(_PClassAAry,_GetOffsetOfPClassA_PhysicData() + compFieldOffset,filterFunc,out length);}
        private NativeArray<T> _GetAllPClassA_PhysicData<T>(int compFieldOffset) where T: unmanaged{return _GetAllEntityField<T,PClassA>(_PClassAAry,_GetOffsetOfPClassA_PhysicData()+ compFieldOffset);}
        private NativeArray<PhysicData> _GetAllPClassA_PhysicData(){return _GetAllEntityField<PhysicData,PClassA>(_PClassAAry,_GetOffsetOfPClassA_PhysicData());} 
        private int _GetOffsetOfPClassA_PhysicData(){ var tempObj =  new PClassA(); PClassA* ptr = &tempObj;var filedPtr = &(ptr->PhysicData);  return (int)((long) filedPtr - (long) ptr);        }
        private NativeArray<T> _GetAllPClassA_int<T>(int compFieldOffset,FuncEntityFilter<Entity> filterFunc,out int length) where T: unmanaged{return _GetAllEntityField<T,PClassA>(_PClassAAry,_GetOffsetOfPClassA_Val1() + compFieldOffset,filterFunc,out length);}
        private NativeArray<T> _GetAllPClassA_int<T>(int compFieldOffset) where T: unmanaged{return _GetAllEntityField<T,PClassA>(_PClassAAry,_GetOffsetOfPClassA_Val1()+ compFieldOffset);}
        private NativeArray<int> _GetAllPClassA_Val1(){return _GetAllEntityField<int,PClassA>(_PClassAAry,_GetOffsetOfPClassA_Val1());} 
        private int _GetOffsetOfPClassA_Val1(){ var tempObj =  new PClassA(); PClassA* ptr = &tempObj;var filedPtr = &(ptr->Val1);  return (int)((long) filedPtr - (long) ptr);        } 
        private NativeArray<T> _GetAllSubClassA_AssetData<T>(int compFieldOffset,FuncEntityFilter<Entity> filterFunc,out int length) where T: unmanaged{return _GetAllEntityField<T,SubClassA>(_SubClassAAry,_GetOffsetOfSubClassA_AssetData() + compFieldOffset,filterFunc,out length);}
        private NativeArray<T> _GetAllSubClassA_AssetData<T>(int compFieldOffset) where T: unmanaged{return _GetAllEntityField<T,SubClassA>(_SubClassAAry,_GetOffsetOfSubClassA_AssetData()+ compFieldOffset);}
        private NativeArray<AssetData> _GetAllSubClassA_AssetData(){return _GetAllEntityField<AssetData,SubClassA>(_SubClassAAry,_GetOffsetOfSubClassA_AssetData());} 
        private int _GetOffsetOfSubClassA_AssetData(){ var tempObj =  new SubClassA(); SubClassA* ptr = &tempObj;var filedPtr = &(ptr->AssetData);  return (int)((long) filedPtr - (long) ptr);        }
        private NativeArray<T> _GetAllSubClassA_Transform3D<T>(int compFieldOffset,FuncEntityFilter<Entity> filterFunc,out int length) where T: unmanaged{return _GetAllEntityField<T,SubClassA>(_SubClassAAry,_GetOffsetOfSubClassA_TransformData() + compFieldOffset,filterFunc,out length);}
        private NativeArray<T> _GetAllSubClassA_Transform3D<T>(int compFieldOffset) where T: unmanaged{return _GetAllEntityField<T,SubClassA>(_SubClassAAry,_GetOffsetOfSubClassA_TransformData()+ compFieldOffset);}
        private NativeArray<Transform3D> _GetAllSubClassA_TransformData(){return _GetAllEntityField<Transform3D,SubClassA>(_SubClassAAry,_GetOffsetOfSubClassA_TransformData());} 
        private int _GetOffsetOfSubClassA_TransformData(){ var tempObj =  new SubClassA(); SubClassA* ptr = &tempObj;var filedPtr = &(ptr->TransformData);  return (int)((long) filedPtr - (long) ptr);        }
        private NativeArray<T> _GetAllSubClassA_BasicData<T>(int compFieldOffset,FuncEntityFilter<Entity> filterFunc,out int length) where T: unmanaged{return _GetAllEntityField<T,SubClassA>(_SubClassAAry,_GetOffsetOfSubClassA_BasicData() + compFieldOffset,filterFunc,out length);}
        private NativeArray<T> _GetAllSubClassA_BasicData<T>(int compFieldOffset) where T: unmanaged{return _GetAllEntityField<T,SubClassA>(_SubClassAAry,_GetOffsetOfSubClassA_BasicData()+ compFieldOffset);}
        private NativeArray<BasicData> _GetAllSubClassA_BasicData(){return _GetAllEntityField<BasicData,SubClassA>(_SubClassAAry,_GetOffsetOfSubClassA_BasicData());} 
        private int _GetOffsetOfSubClassA_BasicData(){ var tempObj =  new SubClassA(); SubClassA* ptr = &tempObj;var filedPtr = &(ptr->BasicData);  return (int)((long) filedPtr - (long) ptr);        }
        private NativeArray<T> _GetAllSubClassA_PhysicData<T>(int compFieldOffset,FuncEntityFilter<Entity> filterFunc,out int length) where T: unmanaged{return _GetAllEntityField<T,SubClassA>(_SubClassAAry,_GetOffsetOfSubClassA_PhysicData() + compFieldOffset,filterFunc,out length);}
        private NativeArray<T> _GetAllSubClassA_PhysicData<T>(int compFieldOffset) where T: unmanaged{return _GetAllEntityField<T,SubClassA>(_SubClassAAry,_GetOffsetOfSubClassA_PhysicData()+ compFieldOffset);}
        private NativeArray<PhysicData> _GetAllSubClassA_PhysicData(){return _GetAllEntityField<PhysicData,SubClassA>(_SubClassAAry,_GetOffsetOfSubClassA_PhysicData());} 
        private int _GetOffsetOfSubClassA_PhysicData(){ var tempObj =  new SubClassA(); SubClassA* ptr = &tempObj;var filedPtr = &(ptr->PhysicData);  return (int)((long) filedPtr - (long) ptr);        }
        private NativeArray<T> _GetAllSubClassA_int<T>(int compFieldOffset,FuncEntityFilter<Entity> filterFunc,out int length) where T: unmanaged{return _GetAllEntityField<T,SubClassA>(_SubClassAAry,_GetOffsetOfSubClassA_Val1() + compFieldOffset,filterFunc,out length);}
        private NativeArray<T> _GetAllSubClassA_int<T>(int compFieldOffset) where T: unmanaged{return _GetAllEntityField<T,SubClassA>(_SubClassAAry,_GetOffsetOfSubClassA_Val1()+ compFieldOffset);}
        private NativeArray<int> _GetAllSubClassA_Val1(){return _GetAllEntityField<int,SubClassA>(_SubClassAAry,_GetOffsetOfSubClassA_Val1());} 
        private int _GetOffsetOfSubClassA_Val1(){ var tempObj =  new SubClassA(); SubClassA* ptr = &tempObj;var filedPtr = &(ptr->Val1);  return (int)((long) filedPtr - (long) ptr);        }
        private NativeArray<T> _GetAllSubClassA_float<T>(int compFieldOffset,FuncEntityFilter<Entity> filterFunc,out int length) where T: unmanaged{return _GetAllEntityField<T,SubClassA>(_SubClassAAry,_GetOffsetOfSubClassA_Val2() + compFieldOffset,filterFunc,out length);}
        private NativeArray<T> _GetAllSubClassA_float<T>(int compFieldOffset) where T: unmanaged{return _GetAllEntityField<T,SubClassA>(_SubClassAAry,_GetOffsetOfSubClassA_Val2()+ compFieldOffset);}
        private NativeArray<float> _GetAllSubClassA_Val2(){return _GetAllEntityField<float,SubClassA>(_SubClassAAry,_GetOffsetOfSubClassA_Val2());} 
        private int _GetOffsetOfSubClassA_Val2(){ var tempObj =  new SubClassA(); SubClassA* ptr = &tempObj;var filedPtr = &(ptr->Val2);  return (int)((long) filedPtr - (long) ptr);        } 
        private NativeArray<T> _GetAllSubClassB_AssetData<T>(int compFieldOffset,FuncEntityFilter<Entity> filterFunc,out int length) where T: unmanaged{return _GetAllEntityField<T,SubClassB>(_SubClassBAry,_GetOffsetOfSubClassB_AssetData() + compFieldOffset,filterFunc,out length);}
        private NativeArray<T> _GetAllSubClassB_AssetData<T>(int compFieldOffset) where T: unmanaged{return _GetAllEntityField<T,SubClassB>(_SubClassBAry,_GetOffsetOfSubClassB_AssetData()+ compFieldOffset);}
        private NativeArray<AssetData> _GetAllSubClassB_AssetData(){return _GetAllEntityField<AssetData,SubClassB>(_SubClassBAry,_GetOffsetOfSubClassB_AssetData());} 
        private int _GetOffsetOfSubClassB_AssetData(){ var tempObj =  new SubClassB(); SubClassB* ptr = &tempObj;var filedPtr = &(ptr->AssetData);  return (int)((long) filedPtr - (long) ptr);        }
        private NativeArray<T> _GetAllSubClassB_Transform3D<T>(int compFieldOffset,FuncEntityFilter<Entity> filterFunc,out int length) where T: unmanaged{return _GetAllEntityField<T,SubClassB>(_SubClassBAry,_GetOffsetOfSubClassB_TransformData() + compFieldOffset,filterFunc,out length);}
        private NativeArray<T> _GetAllSubClassB_Transform3D<T>(int compFieldOffset) where T: unmanaged{return _GetAllEntityField<T,SubClassB>(_SubClassBAry,_GetOffsetOfSubClassB_TransformData()+ compFieldOffset);}
        private NativeArray<Transform3D> _GetAllSubClassB_TransformData(){return _GetAllEntityField<Transform3D,SubClassB>(_SubClassBAry,_GetOffsetOfSubClassB_TransformData());} 
        private int _GetOffsetOfSubClassB_TransformData(){ var tempObj =  new SubClassB(); SubClassB* ptr = &tempObj;var filedPtr = &(ptr->TransformData);  return (int)((long) filedPtr - (long) ptr);        }
        private NativeArray<T> _GetAllSubClassB_BasicData<T>(int compFieldOffset,FuncEntityFilter<Entity> filterFunc,out int length) where T: unmanaged{return _GetAllEntityField<T,SubClassB>(_SubClassBAry,_GetOffsetOfSubClassB_BasicData() + compFieldOffset,filterFunc,out length);}
        private NativeArray<T> _GetAllSubClassB_BasicData<T>(int compFieldOffset) where T: unmanaged{return _GetAllEntityField<T,SubClassB>(_SubClassBAry,_GetOffsetOfSubClassB_BasicData()+ compFieldOffset);}
        private NativeArray<BasicData> _GetAllSubClassB_BasicData(){return _GetAllEntityField<BasicData,SubClassB>(_SubClassBAry,_GetOffsetOfSubClassB_BasicData());} 
        private int _GetOffsetOfSubClassB_BasicData(){ var tempObj =  new SubClassB(); SubClassB* ptr = &tempObj;var filedPtr = &(ptr->BasicData);  return (int)((long) filedPtr - (long) ptr);        }
        private NativeArray<T> _GetAllSubClassB_PhysicData<T>(int compFieldOffset,FuncEntityFilter<Entity> filterFunc,out int length) where T: unmanaged{return _GetAllEntityField<T,SubClassB>(_SubClassBAry,_GetOffsetOfSubClassB_PhysicData() + compFieldOffset,filterFunc,out length);}
        private NativeArray<T> _GetAllSubClassB_PhysicData<T>(int compFieldOffset) where T: unmanaged{return _GetAllEntityField<T,SubClassB>(_SubClassBAry,_GetOffsetOfSubClassB_PhysicData()+ compFieldOffset);}
        private NativeArray<PhysicData> _GetAllSubClassB_PhysicData(){return _GetAllEntityField<PhysicData,SubClassB>(_SubClassBAry,_GetOffsetOfSubClassB_PhysicData());} 
        private int _GetOffsetOfSubClassB_PhysicData(){ var tempObj =  new SubClassB(); SubClassB* ptr = &tempObj;var filedPtr = &(ptr->PhysicData);  return (int)((long) filedPtr - (long) ptr);        }
        private NativeArray<T> _GetAllSubClassB_int<T>(int compFieldOffset,FuncEntityFilter<Entity> filterFunc,out int length) where T: unmanaged{return _GetAllEntityField<T,SubClassB>(_SubClassBAry,_GetOffsetOfSubClassB_Val1() + compFieldOffset,filterFunc,out length);}
        private NativeArray<T> _GetAllSubClassB_int<T>(int compFieldOffset) where T: unmanaged{return _GetAllEntityField<T,SubClassB>(_SubClassBAry,_GetOffsetOfSubClassB_Val1()+ compFieldOffset);}
        private NativeArray<int> _GetAllSubClassB_Val1(){return _GetAllEntityField<int,SubClassB>(_SubClassBAry,_GetOffsetOfSubClassB_Val1());} 
        private int _GetOffsetOfSubClassB_Val1(){ var tempObj =  new SubClassB(); SubClassB* ptr = &tempObj;var filedPtr = &(ptr->Val1);  return (int)((long) filedPtr - (long) ptr);        }
        private NativeArray<T> _GetAllSubClassB_long<T>(int compFieldOffset,FuncEntityFilter<Entity> filterFunc,out int length) where T: unmanaged{return _GetAllEntityField<T,SubClassB>(_SubClassBAry,_GetOffsetOfSubClassB_Val3() + compFieldOffset,filterFunc,out length);}
        private NativeArray<T> _GetAllSubClassB_long<T>(int compFieldOffset) where T: unmanaged{return _GetAllEntityField<T,SubClassB>(_SubClassBAry,_GetOffsetOfSubClassB_Val3()+ compFieldOffset);}
        private NativeArray<long> _GetAllSubClassB_Val3(){return _GetAllEntityField<long,SubClassB>(_SubClassBAry,_GetOffsetOfSubClassB_Val3());} 
        private int _GetOffsetOfSubClassB_Val3(){ var tempObj =  new SubClassB(); SubClassB* ptr = &tempObj;var filedPtr = &(ptr->Val3);  return (int)((long) filedPtr - (long) ptr);        } 
        private NativeArray<T> _GetAllEnemy_AssetData<T>(int compFieldOffset,FuncEntityFilter<Entity> filterFunc,out int length) where T: unmanaged{return _GetAllEntityField<T,Enemy>(_EnemyAry,_GetOffsetOfEnemy_AssetData() + compFieldOffset,filterFunc,out length);}
        private NativeArray<T> _GetAllEnemy_AssetData<T>(int compFieldOffset) where T: unmanaged{return _GetAllEntityField<T,Enemy>(_EnemyAry,_GetOffsetOfEnemy_AssetData()+ compFieldOffset);}
        private NativeArray<AssetData> _GetAllEnemy_AssetData(){return _GetAllEntityField<AssetData,Enemy>(_EnemyAry,_GetOffsetOfEnemy_AssetData());} 
        private int _GetOffsetOfEnemy_AssetData(){ var tempObj =  new Enemy(); Enemy* ptr = &tempObj;var filedPtr = &(ptr->AssetData);  return (int)((long) filedPtr - (long) ptr);        }
        private NativeArray<T> _GetAllEnemy_Transform3D<T>(int compFieldOffset,FuncEntityFilter<Entity> filterFunc,out int length) where T: unmanaged{return _GetAllEntityField<T,Enemy>(_EnemyAry,_GetOffsetOfEnemy_TransformData() + compFieldOffset,filterFunc,out length);}
        private NativeArray<T> _GetAllEnemy_Transform3D<T>(int compFieldOffset) where T: unmanaged{return _GetAllEntityField<T,Enemy>(_EnemyAry,_GetOffsetOfEnemy_TransformData()+ compFieldOffset);}
        private NativeArray<Transform3D> _GetAllEnemy_TransformData(){return _GetAllEntityField<Transform3D,Enemy>(_EnemyAry,_GetOffsetOfEnemy_TransformData());} 
        private int _GetOffsetOfEnemy_TransformData(){ var tempObj =  new Enemy(); Enemy* ptr = &tempObj;var filedPtr = &(ptr->TransformData);  return (int)((long) filedPtr - (long) ptr);        }
        private NativeArray<T> _GetAllEnemy_BasicData<T>(int compFieldOffset,FuncEntityFilter<Entity> filterFunc,out int length) where T: unmanaged{return _GetAllEntityField<T,Enemy>(_EnemyAry,_GetOffsetOfEnemy_BasicData() + compFieldOffset,filterFunc,out length);}
        private NativeArray<T> _GetAllEnemy_BasicData<T>(int compFieldOffset) where T: unmanaged{return _GetAllEntityField<T,Enemy>(_EnemyAry,_GetOffsetOfEnemy_BasicData()+ compFieldOffset);}
        private NativeArray<BasicData> _GetAllEnemy_BasicData(){return _GetAllEntityField<BasicData,Enemy>(_EnemyAry,_GetOffsetOfEnemy_BasicData());} 
        private int _GetOffsetOfEnemy_BasicData(){ var tempObj =  new Enemy(); Enemy* ptr = &tempObj;var filedPtr = &(ptr->BasicData);  return (int)((long) filedPtr - (long) ptr);        }
        private NativeArray<T> _GetAllEnemy_PhysicData<T>(int compFieldOffset,FuncEntityFilter<Entity> filterFunc,out int length) where T: unmanaged{return _GetAllEntityField<T,Enemy>(_EnemyAry,_GetOffsetOfEnemy_PhysicData() + compFieldOffset,filterFunc,out length);}
        private NativeArray<T> _GetAllEnemy_PhysicData<T>(int compFieldOffset) where T: unmanaged{return _GetAllEntityField<T,Enemy>(_EnemyAry,_GetOffsetOfEnemy_PhysicData()+ compFieldOffset);}
        private NativeArray<PhysicData> _GetAllEnemy_PhysicData(){return _GetAllEntityField<PhysicData,Enemy>(_EnemyAry,_GetOffsetOfEnemy_PhysicData());} 
        private int _GetOffsetOfEnemy_PhysicData(){ var tempObj =  new Enemy(); Enemy* ptr = &tempObj;var filedPtr = &(ptr->PhysicData);  return (int)((long) filedPtr - (long) ptr);        }
        private NativeArray<T> _GetAllEnemy_EnemyTag<T>(int compFieldOffset,FuncEntityFilter<Entity> filterFunc,out int length) where T: unmanaged{return _GetAllEntityField<T,Enemy>(_EnemyAry,_GetOffsetOfEnemy_EnemyTag() + compFieldOffset,filterFunc,out length);}
        private NativeArray<T> _GetAllEnemy_EnemyTag<T>(int compFieldOffset) where T: unmanaged{return _GetAllEntityField<T,Enemy>(_EnemyAry,_GetOffsetOfEnemy_EnemyTag()+ compFieldOffset);}
        private NativeArray<EnemyTag> _GetAllEnemy_EnemyTag(){return _GetAllEntityField<EnemyTag,Enemy>(_EnemyAry,_GetOffsetOfEnemy_EnemyTag());} 
        private int _GetOffsetOfEnemy_EnemyTag(){ var tempObj =  new Enemy(); Enemy* ptr = &tempObj;var filedPtr = &(ptr->EnemyTag);  return (int)((long) filedPtr - (long) ptr);        }
        private NativeArray<T> _GetAllEnemy_UnitData<T>(int compFieldOffset,FuncEntityFilter<Entity> filterFunc,out int length) where T: unmanaged{return _GetAllEntityField<T,Enemy>(_EnemyAry,_GetOffsetOfEnemy_UnitData() + compFieldOffset,filterFunc,out length);}
        private NativeArray<T> _GetAllEnemy_UnitData<T>(int compFieldOffset) where T: unmanaged{return _GetAllEntityField<T,Enemy>(_EnemyAry,_GetOffsetOfEnemy_UnitData()+ compFieldOffset);}
        private NativeArray<UnitData> _GetAllEnemy_UnitData(){return _GetAllEntityField<UnitData,Enemy>(_EnemyAry,_GetOffsetOfEnemy_UnitData());} 
        private int _GetOffsetOfEnemy_UnitData(){ var tempObj =  new Enemy(); Enemy* ptr = &tempObj;var filedPtr = &(ptr->UnitData);  return (int)((long) filedPtr - (long) ptr);        }
        private NativeArray<T> _GetAllEnemy_AIData<T>(int compFieldOffset,FuncEntityFilter<Entity> filterFunc,out int length) where T: unmanaged{return _GetAllEntityField<T,Enemy>(_EnemyAry,_GetOffsetOfEnemy_AIData() + compFieldOffset,filterFunc,out length);}
        private NativeArray<T> _GetAllEnemy_AIData<T>(int compFieldOffset) where T: unmanaged{return _GetAllEntityField<T,Enemy>(_EnemyAry,_GetOffsetOfEnemy_AIData()+ compFieldOffset);}
        private NativeArray<AIData> _GetAllEnemy_AIData(){return _GetAllEntityField<AIData,Enemy>(_EnemyAry,_GetOffsetOfEnemy_AIData());} 
        private int _GetOffsetOfEnemy_AIData(){ var tempObj =  new Enemy(); Enemy* ptr = &tempObj;var filedPtr = &(ptr->AIData);  return (int)((long) filedPtr - (long) ptr);        }
        private NativeArray<T> _GetAllEnemy_AnimRenderData<T>(int compFieldOffset,FuncEntityFilter<Entity> filterFunc,out int length) where T: unmanaged{return _GetAllEntityField<T,Enemy>(_EnemyAry,_GetOffsetOfEnemy_AnimRenderData() + compFieldOffset,filterFunc,out length);}
        private NativeArray<T> _GetAllEnemy_AnimRenderData<T>(int compFieldOffset) where T: unmanaged{return _GetAllEntityField<T,Enemy>(_EnemyAry,_GetOffsetOfEnemy_AnimRenderData()+ compFieldOffset);}
        private NativeArray<AnimRenderData> _GetAllEnemy_AnimRenderData(){return _GetAllEntityField<AnimRenderData,Enemy>(_EnemyAry,_GetOffsetOfEnemy_AnimRenderData());} 
        private int _GetOffsetOfEnemy_AnimRenderData(){ var tempObj =  new Enemy(); Enemy* ptr = &tempObj;var filedPtr = &(ptr->AnimRenderData);  return (int)((long) filedPtr - (long) ptr);        }
        private NativeArray<T> _GetAllEnemy_AnimData<T>(int compFieldOffset,FuncEntityFilter<Entity> filterFunc,out int length) where T: unmanaged{return _GetAllEntityField<T,Enemy>(_EnemyAry,_GetOffsetOfEnemy_AnimData() + compFieldOffset,filterFunc,out length);}
        private NativeArray<T> _GetAllEnemy_AnimData<T>(int compFieldOffset) where T: unmanaged{return _GetAllEntityField<T,Enemy>(_EnemyAry,_GetOffsetOfEnemy_AnimData()+ compFieldOffset);}
        private NativeArray<AnimData> _GetAllEnemy_AnimData(){return _GetAllEntityField<AnimData,Enemy>(_EnemyAry,_GetOffsetOfEnemy_AnimData());} 
        private int _GetOffsetOfEnemy_AnimData(){ var tempObj =  new Enemy(); Enemy* ptr = &tempObj;var filedPtr = &(ptr->AnimData);  return (int)((long) filedPtr - (long) ptr);        } 
        private NativeArray<T> _GetAllBullet_AssetData<T>(int compFieldOffset,FuncEntityFilter<Entity> filterFunc,out int length) where T: unmanaged{return _GetAllEntityField<T,Bullet>(_BulletAry,_GetOffsetOfBullet_AssetData() + compFieldOffset,filterFunc,out length);}
        private NativeArray<T> _GetAllBullet_AssetData<T>(int compFieldOffset) where T: unmanaged{return _GetAllEntityField<T,Bullet>(_BulletAry,_GetOffsetOfBullet_AssetData()+ compFieldOffset);}
        private NativeArray<AssetData> _GetAllBullet_AssetData(){return _GetAllEntityField<AssetData,Bullet>(_BulletAry,_GetOffsetOfBullet_AssetData());} 
        private int _GetOffsetOfBullet_AssetData(){ var tempObj =  new Bullet(); Bullet* ptr = &tempObj;var filedPtr = &(ptr->AssetData);  return (int)((long) filedPtr - (long) ptr);        }
        private NativeArray<T> _GetAllBullet_Transform3D<T>(int compFieldOffset,FuncEntityFilter<Entity> filterFunc,out int length) where T: unmanaged{return _GetAllEntityField<T,Bullet>(_BulletAry,_GetOffsetOfBullet_TransformData() + compFieldOffset,filterFunc,out length);}
        private NativeArray<T> _GetAllBullet_Transform3D<T>(int compFieldOffset) where T: unmanaged{return _GetAllEntityField<T,Bullet>(_BulletAry,_GetOffsetOfBullet_TransformData()+ compFieldOffset);}
        private NativeArray<Transform3D> _GetAllBullet_TransformData(){return _GetAllEntityField<Transform3D,Bullet>(_BulletAry,_GetOffsetOfBullet_TransformData());} 
        private int _GetOffsetOfBullet_TransformData(){ var tempObj =  new Bullet(); Bullet* ptr = &tempObj;var filedPtr = &(ptr->TransformData);  return (int)((long) filedPtr - (long) ptr);        }
        private NativeArray<T> _GetAllBullet_BasicData<T>(int compFieldOffset,FuncEntityFilter<Entity> filterFunc,out int length) where T: unmanaged{return _GetAllEntityField<T,Bullet>(_BulletAry,_GetOffsetOfBullet_BasicData() + compFieldOffset,filterFunc,out length);}
        private NativeArray<T> _GetAllBullet_BasicData<T>(int compFieldOffset) where T: unmanaged{return _GetAllEntityField<T,Bullet>(_BulletAry,_GetOffsetOfBullet_BasicData()+ compFieldOffset);}
        private NativeArray<BasicData> _GetAllBullet_BasicData(){return _GetAllEntityField<BasicData,Bullet>(_BulletAry,_GetOffsetOfBullet_BasicData());} 
        private int _GetOffsetOfBullet_BasicData(){ var tempObj =  new Bullet(); Bullet* ptr = &tempObj;var filedPtr = &(ptr->BasicData);  return (int)((long) filedPtr - (long) ptr);        }
        private NativeArray<T> _GetAllBullet_PhysicData<T>(int compFieldOffset,FuncEntityFilter<Entity> filterFunc,out int length) where T: unmanaged{return _GetAllEntityField<T,Bullet>(_BulletAry,_GetOffsetOfBullet_PhysicData() + compFieldOffset,filterFunc,out length);}
        private NativeArray<T> _GetAllBullet_PhysicData<T>(int compFieldOffset) where T: unmanaged{return _GetAllEntityField<T,Bullet>(_BulletAry,_GetOffsetOfBullet_PhysicData()+ compFieldOffset);}
        private NativeArray<PhysicData> _GetAllBullet_PhysicData(){return _GetAllEntityField<PhysicData,Bullet>(_BulletAry,_GetOffsetOfBullet_PhysicData());} 
        private int _GetOffsetOfBullet_PhysicData(){ var tempObj =  new Bullet(); Bullet* ptr = &tempObj;var filedPtr = &(ptr->PhysicData);  return (int)((long) filedPtr - (long) ptr);        }
        private NativeArray<T> _GetAllBullet_BulletTag<T>(int compFieldOffset,FuncEntityFilter<Entity> filterFunc,out int length) where T: unmanaged{return _GetAllEntityField<T,Bullet>(_BulletAry,_GetOffsetOfBullet_BulletTag() + compFieldOffset,filterFunc,out length);}
        private NativeArray<T> _GetAllBullet_BulletTag<T>(int compFieldOffset) where T: unmanaged{return _GetAllEntityField<T,Bullet>(_BulletAry,_GetOffsetOfBullet_BulletTag()+ compFieldOffset);}
        private NativeArray<BulletTag> _GetAllBullet_BulletTag(){return _GetAllEntityField<BulletTag,Bullet>(_BulletAry,_GetOffsetOfBullet_BulletTag());} 
        private int _GetOffsetOfBullet_BulletTag(){ var tempObj =  new Bullet(); Bullet* ptr = &tempObj;var filedPtr = &(ptr->BulletTag);  return (int)((long) filedPtr - (long) ptr);        }
        private NativeArray<T> _GetAllBullet_MeshRenderData<T>(int compFieldOffset,FuncEntityFilter<Entity> filterFunc,out int length) where T: unmanaged{return _GetAllEntityField<T,Bullet>(_BulletAry,_GetOffsetOfBullet_MeshRenderData() + compFieldOffset,filterFunc,out length);}
        private NativeArray<T> _GetAllBullet_MeshRenderData<T>(int compFieldOffset) where T: unmanaged{return _GetAllEntityField<T,Bullet>(_BulletAry,_GetOffsetOfBullet_MeshRenderData()+ compFieldOffset);}
        private NativeArray<MeshRenderData> _GetAllBullet_MeshRenderData(){return _GetAllEntityField<MeshRenderData,Bullet>(_BulletAry,_GetOffsetOfBullet_MeshRenderData());} 
        private int _GetOffsetOfBullet_MeshRenderData(){ var tempObj =  new Bullet(); Bullet* ptr = &tempObj;var filedPtr = &(ptr->MeshRenderData);  return (int)((long) filedPtr - (long) ptr);        }
        private NativeArray<T> _GetAllBullet_UnitData<T>(int compFieldOffset,FuncEntityFilter<Entity> filterFunc,out int length) where T: unmanaged{return _GetAllEntityField<T,Bullet>(_BulletAry,_GetOffsetOfBullet_UnitData() + compFieldOffset,filterFunc,out length);}
        private NativeArray<T> _GetAllBullet_UnitData<T>(int compFieldOffset) where T: unmanaged{return _GetAllEntityField<T,Bullet>(_BulletAry,_GetOffsetOfBullet_UnitData()+ compFieldOffset);}
        private NativeArray<UnitData> _GetAllBullet_UnitData(){return _GetAllEntityField<UnitData,Bullet>(_BulletAry,_GetOffsetOfBullet_UnitData());} 
        private int _GetOffsetOfBullet_UnitData(){ var tempObj =  new Bullet(); Bullet* ptr = &tempObj;var filedPtr = &(ptr->UnitData);  return (int)((long) filedPtr - (long) ptr);        } 
        private NativeArray<T> _GetAllBulletEmitter_AssetData<T>(int compFieldOffset,FuncEntityFilter<Entity> filterFunc,out int length) where T: unmanaged{return _GetAllEntityField<T,BulletEmitter>(_BulletEmitterAry,_GetOffsetOfBulletEmitter_AssetData() + compFieldOffset,filterFunc,out length);}
        private NativeArray<T> _GetAllBulletEmitter_AssetData<T>(int compFieldOffset) where T: unmanaged{return _GetAllEntityField<T,BulletEmitter>(_BulletEmitterAry,_GetOffsetOfBulletEmitter_AssetData()+ compFieldOffset);}
        private NativeArray<AssetData> _GetAllBulletEmitter_AssetData(){return _GetAllEntityField<AssetData,BulletEmitter>(_BulletEmitterAry,_GetOffsetOfBulletEmitter_AssetData());} 
        private int _GetOffsetOfBulletEmitter_AssetData(){ var tempObj =  new BulletEmitter(); BulletEmitter* ptr = &tempObj;var filedPtr = &(ptr->AssetData);  return (int)((long) filedPtr - (long) ptr);        }
        private NativeArray<T> _GetAllBulletEmitter_Transform3D<T>(int compFieldOffset,FuncEntityFilter<Entity> filterFunc,out int length) where T: unmanaged{return _GetAllEntityField<T,BulletEmitter>(_BulletEmitterAry,_GetOffsetOfBulletEmitter_TransformData() + compFieldOffset,filterFunc,out length);}
        private NativeArray<T> _GetAllBulletEmitter_Transform3D<T>(int compFieldOffset) where T: unmanaged{return _GetAllEntityField<T,BulletEmitter>(_BulletEmitterAry,_GetOffsetOfBulletEmitter_TransformData()+ compFieldOffset);}
        private NativeArray<Transform3D> _GetAllBulletEmitter_TransformData(){return _GetAllEntityField<Transform3D,BulletEmitter>(_BulletEmitterAry,_GetOffsetOfBulletEmitter_TransformData());} 
        private int _GetOffsetOfBulletEmitter_TransformData(){ var tempObj =  new BulletEmitter(); BulletEmitter* ptr = &tempObj;var filedPtr = &(ptr->TransformData);  return (int)((long) filedPtr - (long) ptr);        }
        private NativeArray<T> _GetAllBulletEmitter_BasicData<T>(int compFieldOffset,FuncEntityFilter<Entity> filterFunc,out int length) where T: unmanaged{return _GetAllEntityField<T,BulletEmitter>(_BulletEmitterAry,_GetOffsetOfBulletEmitter_BasicData() + compFieldOffset,filterFunc,out length);}
        private NativeArray<T> _GetAllBulletEmitter_BasicData<T>(int compFieldOffset) where T: unmanaged{return _GetAllEntityField<T,BulletEmitter>(_BulletEmitterAry,_GetOffsetOfBulletEmitter_BasicData()+ compFieldOffset);}
        private NativeArray<BasicData> _GetAllBulletEmitter_BasicData(){return _GetAllEntityField<BasicData,BulletEmitter>(_BulletEmitterAry,_GetOffsetOfBulletEmitter_BasicData());} 
        private int _GetOffsetOfBulletEmitter_BasicData(){ var tempObj =  new BulletEmitter(); BulletEmitter* ptr = &tempObj;var filedPtr = &(ptr->BasicData);  return (int)((long) filedPtr - (long) ptr);        }
        private NativeArray<T> _GetAllBulletEmitter_PhysicData<T>(int compFieldOffset,FuncEntityFilter<Entity> filterFunc,out int length) where T: unmanaged{return _GetAllEntityField<T,BulletEmitter>(_BulletEmitterAry,_GetOffsetOfBulletEmitter_PhysicData() + compFieldOffset,filterFunc,out length);}
        private NativeArray<T> _GetAllBulletEmitter_PhysicData<T>(int compFieldOffset) where T: unmanaged{return _GetAllEntityField<T,BulletEmitter>(_BulletEmitterAry,_GetOffsetOfBulletEmitter_PhysicData()+ compFieldOffset);}
        private NativeArray<PhysicData> _GetAllBulletEmitter_PhysicData(){return _GetAllEntityField<PhysicData,BulletEmitter>(_BulletEmitterAry,_GetOffsetOfBulletEmitter_PhysicData());} 
        private int _GetOffsetOfBulletEmitter_PhysicData(){ var tempObj =  new BulletEmitter(); BulletEmitter* ptr = &tempObj;var filedPtr = &(ptr->PhysicData);  return (int)((long) filedPtr - (long) ptr);        }
        private NativeArray<T> _GetAllBulletEmitter_SpawnerTag<T>(int compFieldOffset,FuncEntityFilter<Entity> filterFunc,out int length) where T: unmanaged{return _GetAllEntityField<T,BulletEmitter>(_BulletEmitterAry,_GetOffsetOfBulletEmitter_SpawnerTag() + compFieldOffset,filterFunc,out length);}
        private NativeArray<T> _GetAllBulletEmitter_SpawnerTag<T>(int compFieldOffset) where T: unmanaged{return _GetAllEntityField<T,BulletEmitter>(_BulletEmitterAry,_GetOffsetOfBulletEmitter_SpawnerTag()+ compFieldOffset);}
        private NativeArray<SpawnerTag> _GetAllBulletEmitter_SpawnerTag(){return _GetAllEntityField<SpawnerTag,BulletEmitter>(_BulletEmitterAry,_GetOffsetOfBulletEmitter_SpawnerTag());} 
        private int _GetOffsetOfBulletEmitter_SpawnerTag(){ var tempObj =  new BulletEmitter(); BulletEmitter* ptr = &tempObj;var filedPtr = &(ptr->SpawnerTag);  return (int)((long) filedPtr - (long) ptr);        }
        private NativeArray<T> _GetAllBulletEmitter_MeshRenderData<T>(int compFieldOffset,FuncEntityFilter<Entity> filterFunc,out int length) where T: unmanaged{return _GetAllEntityField<T,BulletEmitter>(_BulletEmitterAry,_GetOffsetOfBulletEmitter_MeshRenderData() + compFieldOffset,filterFunc,out length);}
        private NativeArray<T> _GetAllBulletEmitter_MeshRenderData<T>(int compFieldOffset) where T: unmanaged{return _GetAllEntityField<T,BulletEmitter>(_BulletEmitterAry,_GetOffsetOfBulletEmitter_MeshRenderData()+ compFieldOffset);}
        private NativeArray<MeshRenderData> _GetAllBulletEmitter_MeshRenderData(){return _GetAllEntityField<MeshRenderData,BulletEmitter>(_BulletEmitterAry,_GetOffsetOfBulletEmitter_MeshRenderData());} 
        private int _GetOffsetOfBulletEmitter_MeshRenderData(){ var tempObj =  new BulletEmitter(); BulletEmitter* ptr = &tempObj;var filedPtr = &(ptr->MeshRenderData);  return (int)((long) filedPtr - (long) ptr);        }
        private NativeArray<T> _GetAllBulletEmitter_EmitterData<T>(int compFieldOffset,FuncEntityFilter<Entity> filterFunc,out int length) where T: unmanaged{return _GetAllEntityField<T,BulletEmitter>(_BulletEmitterAry,_GetOffsetOfBulletEmitter_EmitterData() + compFieldOffset,filterFunc,out length);}
        private NativeArray<T> _GetAllBulletEmitter_EmitterData<T>(int compFieldOffset) where T: unmanaged{return _GetAllEntityField<T,BulletEmitter>(_BulletEmitterAry,_GetOffsetOfBulletEmitter_EmitterData()+ compFieldOffset);}
        private NativeArray<EmitterData> _GetAllBulletEmitter_EmitterData(){return _GetAllEntityField<EmitterData,BulletEmitter>(_BulletEmitterAry,_GetOffsetOfBulletEmitter_EmitterData());} 
        private int _GetOffsetOfBulletEmitter_EmitterData(){ var tempObj =  new BulletEmitter(); BulletEmitter* ptr = &tempObj;var filedPtr = &(ptr->EmitterData);  return (int)((long) filedPtr - (long) ptr);        }        

        private int _GetOffsetOfMeshRenderData_Padding(){var tempObj =  new MeshRenderData(); MeshRenderData* ptr = &tempObj; var filedPtr = &(ptr->Padding);return (int)((long) filedPtr - (long) ptr);        }
        private int _GetSizeOfMeshRenderData_Padding(){ return sizeof(int); } 
        private int _GetOffsetOfAnimRenderData_AnimInfo0(){var tempObj =  new AnimRenderData(); AnimRenderData* ptr = &tempObj; var filedPtr = &(ptr->AnimInfo0);return (int)((long) filedPtr - (long) ptr);        }
        private int _GetSizeOfAnimRenderData_AnimInfo0(){ return sizeof(float4); }
        private int _GetOffsetOfAnimRenderData_AnimInfo1(){var tempObj =  new AnimRenderData(); AnimRenderData* ptr = &tempObj; var filedPtr = &(ptr->AnimInfo1);return (int)((long) filedPtr - (long) ptr);        }
        private int _GetSizeOfAnimRenderData_AnimInfo1(){ return sizeof(float4); }
        private int _GetOffsetOfAnimRenderData_AnimInfo2(){var tempObj =  new AnimRenderData(); AnimRenderData* ptr = &tempObj; var filedPtr = &(ptr->AnimInfo2);return (int)((long) filedPtr - (long) ptr);        }
        private int _GetSizeOfAnimRenderData_AnimInfo2(){ return sizeof(float4); }
        private int _GetOffsetOfAnimRenderData_AnimInfo3(){var tempObj =  new AnimRenderData(); AnimRenderData* ptr = &tempObj; var filedPtr = &(ptr->AnimInfo3);return (int)((long) filedPtr - (long) ptr);        }
        private int _GetSizeOfAnimRenderData_AnimInfo3(){ return sizeof(float4); } 
        private int _GetOffsetOfPhysicData_GridCoord(){var tempObj =  new PhysicData(); PhysicData* ptr = &tempObj; var filedPtr = &(ptr->GridCoord);return (int)((long) filedPtr - (long) ptr);        }
        private int _GetSizeOfPhysicData_GridCoord(){ return sizeof(int2); }
        private int _GetOffsetOfPhysicData_Radius(){var tempObj =  new PhysicData(); PhysicData* ptr = &tempObj; var filedPtr = &(ptr->Radius);return (int)((long) filedPtr - (long) ptr);        }
        private int _GetSizeOfPhysicData_Radius(){ return sizeof(float); }
        private int _GetOffsetOfPhysicData_Speed(){var tempObj =  new PhysicData(); PhysicData* ptr = &tempObj; var filedPtr = &(ptr->Speed);return (int)((long) filedPtr - (long) ptr);        }
        private int _GetSizeOfPhysicData_Speed(){ return sizeof(float); }
        private int _GetOffsetOfPhysicData_RotateSpeed(){var tempObj =  new PhysicData(); PhysicData* ptr = &tempObj; var filedPtr = &(ptr->RotateSpeed);return (int)((long) filedPtr - (long) ptr);        }
        private int _GetSizeOfPhysicData_RotateSpeed(){ return sizeof(float); } 
        private int _GetOffsetOfBasicData_GObjectId(){var tempObj =  new BasicData(); BasicData* ptr = &tempObj; var filedPtr = &(ptr->GObjectId);return (int)((long) filedPtr - (long) ptr);        }
        private int _GetSizeOfBasicData_GObjectId(){ return sizeof(int); }
        private int _GetOffsetOfBasicData_StatusData(){var tempObj =  new BasicData(); BasicData* ptr = &tempObj; var filedPtr = &(ptr->StatusData);return (int)((long) filedPtr - (long) ptr);        }
        private int _GetSizeOfBasicData_StatusData(){ return sizeof(Bitset32); } 
        private int _GetOffsetOfEnemyTag_Padding(){var tempObj =  new EnemyTag(); EnemyTag* ptr = &tempObj; var filedPtr = &(ptr->Padding);return (int)((long) filedPtr - (long) ptr);        }
        private int _GetSizeOfEnemyTag_Padding(){ return sizeof(int); } 
        private int _GetOffsetOfBulletTag_Padding(){var tempObj =  new BulletTag(); BulletTag* ptr = &tempObj; var filedPtr = &(ptr->Padding);return (int)((long) filedPtr - (long) ptr);        }
        private int _GetSizeOfBulletTag_Padding(){ return sizeof(int); } 
        private int _GetOffsetOfSpawnerTag_Padding(){var tempObj =  new SpawnerTag(); SpawnerTag* ptr = &tempObj; var filedPtr = &(ptr->Padding);return (int)((long) filedPtr - (long) ptr);        }
        private int _GetSizeOfSpawnerTag_Padding(){ return sizeof(int); } 
        private int _GetOffsetOfUnitData_Attack(){var tempObj =  new UnitData(); UnitData* ptr = &tempObj; var filedPtr = &(ptr->Attack);return (int)((long) filedPtr - (long) ptr);        }
        private int _GetSizeOfUnitData_Attack(){ return sizeof(int); }
        private int _GetOffsetOfUnitData_Defence(){var tempObj =  new UnitData(); UnitData* ptr = &tempObj; var filedPtr = &(ptr->Defence);return (int)((long) filedPtr - (long) ptr);        }
        private int _GetSizeOfUnitData_Defence(){ return sizeof(int); }
        private int _GetOffsetOfUnitData_Health(){var tempObj =  new UnitData(); UnitData* ptr = &tempObj; var filedPtr = &(ptr->Health);return (int)((long) filedPtr - (long) ptr);        }
        private int _GetSizeOfUnitData_Health(){ return sizeof(int); } 
        private int _GetOffsetOfEmitterData_Deg(){var tempObj =  new EmitterData(); EmitterData* ptr = &tempObj; var filedPtr = &(ptr->Deg);return (int)((long) filedPtr - (long) ptr);        }
        private int _GetSizeOfEmitterData_Deg(){ return sizeof(int); }
        private int _GetOffsetOfEmitterData_Count(){var tempObj =  new EmitterData(); EmitterData* ptr = &tempObj; var filedPtr = &(ptr->Count);return (int)((long) filedPtr - (long) ptr);        }
        private int _GetSizeOfEmitterData_Count(){ return sizeof(int); }
        private int _GetOffsetOfEmitterData_LiveTime(){var tempObj =  new EmitterData(); EmitterData* ptr = &tempObj; var filedPtr = &(ptr->LiveTime);return (int)((long) filedPtr - (long) ptr);        }
        private int _GetSizeOfEmitterData_LiveTime(){ return sizeof(float); }
        private int _GetOffsetOfEmitterData_Interval(){var tempObj =  new EmitterData(); EmitterData* ptr = &tempObj; var filedPtr = &(ptr->Interval);return (int)((long) filedPtr - (long) ptr);        }
        private int _GetSizeOfEmitterData_Interval(){ return sizeof(float); }
        private int _GetOffsetOfEmitterData_Timer(){var tempObj =  new EmitterData(); EmitterData* ptr = &tempObj; var filedPtr = &(ptr->Timer);return (int)((long) filedPtr - (long) ptr);        }
        private int _GetSizeOfEmitterData_Timer(){ return sizeof(float); } 
        private int _GetOffsetOfAIData_AITimer(){var tempObj =  new AIData(); AIData* ptr = &tempObj; var filedPtr = &(ptr->AITimer);return (int)((long) filedPtr - (long) ptr);        }
        private int _GetSizeOfAIData_AITimer(){ return sizeof(float); }
        private int _GetOffsetOfAIData_TargetDeg(){var tempObj =  new AIData(); AIData* ptr = &tempObj; var filedPtr = &(ptr->TargetDeg);return (int)((long) filedPtr - (long) ptr);        }
        private int _GetSizeOfAIData_TargetDeg(){ return sizeof(float); }
        private int _GetOffsetOfAIData_LerpInterval(){var tempObj =  new AIData(); AIData* ptr = &tempObj; var filedPtr = &(ptr->LerpInterval);return (int)((long) filedPtr - (long) ptr);        }
        private int _GetSizeOfAIData_LerpInterval(){ return sizeof(float); }
        private int _GetOffsetOfAIData_LerpTimer(){var tempObj =  new AIData(); AIData* ptr = &tempObj; var filedPtr = &(ptr->LerpTimer);return (int)((long) filedPtr - (long) ptr);        }
        private int _GetSizeOfAIData_LerpTimer(){ return sizeof(float); } 
        private int _GetOffsetOfAnimData_Timer(){var tempObj =  new AnimData(); AnimData* ptr = &tempObj; var filedPtr = &(ptr->Timer);return (int)((long) filedPtr - (long) ptr);        }
        private int _GetSizeOfAnimData_Timer(){ return sizeof(float4); }
        private int _GetOffsetOfAnimData_LerpTimer(){var tempObj =  new AnimData(); AnimData* ptr = &tempObj; var filedPtr = &(ptr->LerpTimer);return (int)((long) filedPtr - (long) ptr);        }
        private int _GetSizeOfAnimData_LerpTimer(){ return sizeof(float4); }
        private int _GetOffsetOfAnimData_AnimId1(){var tempObj =  new AnimData(); AnimData* ptr = &tempObj; var filedPtr = &(ptr->AnimId1);return (int)((long) filedPtr - (long) ptr);        }
        private int _GetSizeOfAnimData_AnimId1(){ return sizeof(int4); }
        private int _GetOffsetOfAnimData_AnimId2(){var tempObj =  new AnimData(); AnimData* ptr = &tempObj; var filedPtr = &(ptr->AnimId2);return (int)((long) filedPtr - (long) ptr);        }
        private int _GetSizeOfAnimData_AnimId2(){ return sizeof(int4); } 
        private int _GetOffsetOfAnimator_Pad(){var tempObj =  new Animator(); Animator* ptr = &tempObj; var filedPtr = &(ptr->Pad);return (int)((long) filedPtr - (long) ptr);        }
        private int _GetSizeOfAnimator_Pad(){ return sizeof(int); } 
        private int _GetOffsetOfCollisionAgent_Collider(){var tempObj =  new CollisionAgent(); CollisionAgent* ptr = &tempObj; var filedPtr = &(ptr->Collider);return (int)((long) filedPtr - (long) ptr);        }
        private int _GetSizeOfCollisionAgent_Collider(){ return sizeof(CollisionShape); }
        private int _GetOffsetOfCollisionAgent_IsTrigger(){var tempObj =  new CollisionAgent(); CollisionAgent* ptr = &tempObj; var filedPtr = &(ptr->IsTrigger);return (int)((long) filedPtr - (long) ptr);        }
        private int _GetSizeOfCollisionAgent_IsTrigger(){ return sizeof(bool); }
        private int _GetOffsetOfCollisionAgent_Layer(){var tempObj =  new CollisionAgent(); CollisionAgent* ptr = &tempObj; var filedPtr = &(ptr->Layer);return (int)((long) filedPtr - (long) ptr);        }
        private int _GetSizeOfCollisionAgent_Layer(){ return sizeof(int); }
        private int _GetOffsetOfCollisionAgent_IsEnable(){var tempObj =  new CollisionAgent(); CollisionAgent* ptr = &tempObj; var filedPtr = &(ptr->IsEnable);return (int)((long) filedPtr - (long) ptr);        }
        private int _GetSizeOfCollisionAgent_IsEnable(){ return sizeof(bool); }
        private int _GetOffsetOfCollisionAgent_IsSleep(){var tempObj =  new CollisionAgent(); CollisionAgent* ptr = &tempObj; var filedPtr = &(ptr->IsSleep);return (int)((long) filedPtr - (long) ptr);        }
        private int _GetSizeOfCollisionAgent_IsSleep(){ return sizeof(bool); }
        private int _GetOffsetOfCollisionAgent_Mass(){var tempObj =  new CollisionAgent(); CollisionAgent* ptr = &tempObj; var filedPtr = &(ptr->Mass);return (int)((long) filedPtr - (long) ptr);        }
        private int _GetSizeOfCollisionAgent_Mass(){ return sizeof(float); }
        private int _GetOffsetOfCollisionAgent_AngularSpeed(){var tempObj =  new CollisionAgent(); CollisionAgent* ptr = &tempObj; var filedPtr = &(ptr->AngularSpeed);return (int)((long) filedPtr - (long) ptr);        }
        private int _GetSizeOfCollisionAgent_AngularSpeed(){ return sizeof(float); }
        private int _GetOffsetOfCollisionAgent_Speed(){var tempObj =  new CollisionAgent(); CollisionAgent* ptr = &tempObj; var filedPtr = &(ptr->Speed);return (int)((long) filedPtr - (long) ptr);        }
        private int _GetSizeOfCollisionAgent_Speed(){ return sizeof(float3); } 
        private int _GetOffsetOfNavMeshAgent_Pad(){var tempObj =  new NavMeshAgent(); NavMeshAgent* ptr = &tempObj; var filedPtr = &(ptr->Pad);return (int)((long) filedPtr - (long) ptr);        }
        private int _GetSizeOfNavMeshAgent_Pad(){ return sizeof(int); } 
        private int _GetOffsetOfAssetData_AssetId(){var tempObj =  new AssetData(); AssetData* ptr = &tempObj; var filedPtr = &(ptr->AssetId);return (int)((long) filedPtr - (long) ptr);        }
        private int _GetSizeOfAssetData_AssetId(){ return sizeof(int); }
        private int _GetOffsetOfAssetData_InstancePrefabIdx(){var tempObj =  new AssetData(); AssetData* ptr = &tempObj; var filedPtr = &(ptr->InstancePrefabIdx);return (int)((long) filedPtr - (long) ptr);        }
        private int _GetSizeOfAssetData_InstancePrefabIdx(){ return sizeof(int); } 
        private int _GetOffsetOfTransform2D_Position(){var tempObj =  new Transform2D(); Transform2D* ptr = &tempObj; var filedPtr = &(ptr->Position);return (int)((long) filedPtr - (long) ptr);        }
        private int _GetSizeOfTransform2D_Position(){ return sizeof(float2); }
        private int _GetOffsetOfTransform2D_Deg(){var tempObj =  new Transform2D(); Transform2D* ptr = &tempObj; var filedPtr = &(ptr->Deg);return (int)((long) filedPtr - (long) ptr);        }
        private int _GetSizeOfTransform2D_Deg(){ return sizeof(float); }
        private int _GetOffsetOfTransform2D_Scale(){var tempObj =  new Transform2D(); Transform2D* ptr = &tempObj; var filedPtr = &(ptr->Scale);return (int)((long) filedPtr - (long) ptr);        }
        private int _GetSizeOfTransform2D_Scale(){ return sizeof(float); } 
        private int _GetOffsetOfTransform3D_Position(){var tempObj =  new Transform3D(); Transform3D* ptr = &tempObj; var filedPtr = &(ptr->Position);return (int)((long) filedPtr - (long) ptr);        }
        private int _GetSizeOfTransform3D_Position(){ return sizeof(float3); }
        private int _GetOffsetOfTransform3D_Rotation(){var tempObj =  new Transform3D(); Transform3D* ptr = &tempObj; var filedPtr = &(ptr->Rotation);return (int)((long) filedPtr - (long) ptr);        }
        private int _GetSizeOfTransform3D_Rotation(){ return sizeof(float3); }
        private int _GetOffsetOfTransform3D_Scale(){var tempObj =  new Transform3D(); Transform3D* ptr = &tempObj; var filedPtr = &(ptr->Scale);return (int)((long) filedPtr - (long) ptr);        }
        private int _GetSizeOfTransform3D_Scale(){ return sizeof(float3); }        

#endregion

        internal int CurTotalEntityCount =>
            0 
            + CurPClassACount
            + CurSubClassACount
            + CurSubClassBCount
            + CurEnemyCount
            + CurBulletCount
            + CurBulletEmitterCount            
            ;


    }
}                                                                                                                                                                                                                                                                                     