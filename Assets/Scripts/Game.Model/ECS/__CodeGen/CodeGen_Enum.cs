
//------------------------------------------------------------------------------    
// <auto-generated>                                                                 
//     This code was generated by GamesTan.Tools.MacroExpansion, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null. 
//     https://github.com/JiepengTan/LockstepECS                                         
//     Changes to this file may cause incorrect behavior and will be lost if        
//     the code is regenerated.                                                     
// </auto-generated>                                                                
//------------------------------------------------------------------------------  

//Power by ME //src: https://github.com/JiepengTan/ME  

//#define DONT_USE_GENERATE_CODE                                                                 
                                                                                                 
using System.Linq;                                                                               
using System.Runtime.InteropServices;                                                            
using System;                                                                                    
using System.Collections.Generic;                                                                
using System.Collections;                                                                        
using System.Runtime.CompilerServices;                                                           
using Lockstep.Game;                                                                             
using Unity.Burst;                                                                               
using Lockstep.Math;                                                                             
using Unity.Mathematics;                                                                                                                                                                            
namespace GamesTan.ECS.Game { 

    public enum EEntityType : int {
        None,
        Enemy,
        Bullet,
        BulletEmitter, 
        EnumCount,
    }

    public static class EntityIds {
      	public const int Enemy = (int)(EEntityType.Enemy);
      	public const int Bullet = (int)(EEntityType.Bullet);
      	public const int BulletEmitter = (int)(EEntityType.BulletEmitter); 
      	public const int TotalEntityTypeCount = ((int)(EEntityType.EnumCount) -1);
    }

    public enum EComponentType : int {
        None,
        MeshRenderData,
        AnimRenderData,
        PhysicData,
        BasicData,
        EnemyTag,
        BulletTag,
        SpawnerTag,
        UnitData,
        EmitterData,
        AIData,
        AnimData,
        Animator,
        CollisionAgent,
        NavMeshAgent,
        AssetData,
        Transform2D,
        Transform3D, 
        EnumCount
    }

    public class CompoenntIds {
      public const int MeshRenderData = (int)(EComponentType.MeshRenderData);
      public const int AnimRenderData = (int)(EComponentType.AnimRenderData);
      public const int PhysicData = (int)(EComponentType.PhysicData);
      public const int BasicData = (int)(EComponentType.BasicData);
      public const int EnemyTag = (int)(EComponentType.EnemyTag);
      public const int BulletTag = (int)(EComponentType.BulletTag);
      public const int SpawnerTag = (int)(EComponentType.SpawnerTag);
      public const int UnitData = (int)(EComponentType.UnitData);
      public const int EmitterData = (int)(EComponentType.EmitterData);
      public const int AIData = (int)(EComponentType.AIData);
      public const int AnimData = (int)(EComponentType.AnimData);
      public const int Animator = (int)(EComponentType.Animator);
      public const int CollisionAgent = (int)(EComponentType.CollisionAgent);
      public const int NavMeshAgent = (int)(EComponentType.NavMeshAgent);
      public const int AssetData = (int)(EComponentType.AssetData);
      public const int Transform2D = (int)(EComponentType.Transform2D);
      public const int Transform3D = (int)(EComponentType.Transform3D); 
      public const int TotalComponentTypeCount = ((int)(EComponentType.EnumCount) -1);
    }



    public enum ECampType : int {
        Player = 0,
        Enemy = 1,
        Other = 2, 
    }
    public enum EItemType : int {
        AddLife = 0,
        Boom = 1,
        Upgrade = 2,
        EnumCount = 3, 
    }
    public enum EDir : int {
        Up = 0,
        Left = 1,
        Down = 2,
        Right = 3,
        EnumCount = 4, 
    } 


    public enum E_EntityOfMeshRenderData{
        Bullet,
        BulletEmitter,
    }
    public enum E_EntityOfAnimRenderData{
        Enemy,
    }
    public enum E_EntityOfPhysicData{
        Enemy,
        Bullet,
        BulletEmitter,
    }
    public enum E_EntityOfBasicData{
        Enemy,
        Bullet,
        BulletEmitter,
    }
    public enum E_EntityOfEnemyTag{
        Enemy,
    }
    public enum E_EntityOfBulletTag{
        Bullet,
    }
    public enum E_EntityOfSpawnerTag{
        BulletEmitter,
    }
    public enum E_EntityOfUnitData{
        Enemy,
        Bullet,
    }
    public enum E_EntityOfEmitterData{
        BulletEmitter,
    }
    public enum E_EntityOfAIData{
        Enemy,
    }
    public enum E_EntityOfAnimData{
        Enemy,
    }
    public enum E_EntityOfAnimator{

    }
    public enum E_EntityOfCollisionAgent{

    }
    public enum E_EntityOfNavMeshAgent{

    }
    public enum E_EntityOfAssetData{
        Enemy,
        Bullet,
        BulletEmitter,
    }
    public enum E_EntityOfTransform2D{

    }
    public enum E_EntityOfTransform3D{
        Enemy,
        Bullet,
        BulletEmitter,
    }
    public enum E_FieldOfMeshRenderData{
        Padding,
    }
    public enum E_FieldOfAnimRenderData{
        AnimInfo0,
        AnimInfo1,
        AnimInfo2,
        AnimInfo3,
    }
    public enum E_FieldOfPhysicData{
        GridCoord,
        Radius,
        Speed,
        RotateSpeed,
    }
    public enum E_FieldOfBasicData{
        GObjectId,
        StatusData,
    }
    public enum E_FieldOfEnemyTag{
        Padding,
    }
    public enum E_FieldOfBulletTag{
        Padding,
    }
    public enum E_FieldOfSpawnerTag{
        Padding,
    }
    public enum E_FieldOfUnitData{
        Attack,
        Defence,
        Health,
    }
    public enum E_FieldOfEmitterData{
        Deg,
        Count,
        LiveTime,
        Interval,
        Timer,
    }
    public enum E_FieldOfAIData{
        AITimer,
        TargetDeg,
        LerpInterval,
        LerpTimer,
    }
    public enum E_FieldOfAnimData{
        Timer,
        LerpTimer,
        AnimId1,
        AnimId2,
    }
    public enum E_FieldOfAnimator{
        Pad,
    }
    public enum E_FieldOfCollisionAgent{
        Collider,
        IsTrigger,
        Layer,
        IsEnable,
        IsSleep,
        Mass,
        AngularSpeed,
        Speed,
    }
    public enum E_FieldOfNavMeshAgent{
        Pad,
    }
    public enum E_FieldOfAssetData{
        AssetId,
        InstancePrefabIdx,
    }
    public enum E_FieldOfTransform2D{
        Position,
        Deg,
        Scale,
    }
    public enum E_FieldOfTransform3D{
        Position,
        Rotation,
        Scale,
    }
}                                                                                                                                                                                                                                                                                     