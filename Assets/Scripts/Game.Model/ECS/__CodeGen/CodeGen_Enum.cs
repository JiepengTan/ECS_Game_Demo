
//------------------------------------------------------------------------------    
// <auto-generated>                                                                 
//     This code was generated by GamesTan.Tools.MacroExpansion, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null. 
//     https://github.com/JiepengTan/GamesTanEngine                                          
//     Changes to this file may cause incorrect behavior and will be lost if        
//     the code is regenerated.                                                     
// </auto-generated>                                                                
//------------------------------------------------------------------------------  

//Power by ME //src: https://github.com/JiepengTan/ME  

//#define DONT_USE_GENERATE_CODE                                                                 
                                                                                                 
using System.Linq;                                                                               
using System.Runtime.InteropServices;                                                            
using System;                                                                                    
using System.Collections.Generic;                                                                
using Lockstep.UnsafeECS;                                                                        
using Unity.Burst;                                                                               
using Unity.Mathematics;                                                                         
namespace GamesTan.ECS.Game{                                                                          
namespace Lockstep.UnsafeECS.Game { 

    public enum EEntityType : int {
        None,
        Enemy,
        Bullet,
        BulletEmitter, 
        EnumCount,
    }

    public static class EntityIds {
      	public const int Enemy = (int)(EEntityType.Enemy);
      	public const int Bullet = (int)(EEntityType.Bullet);
      	public const int BulletEmitter = (int)(EEntityType.BulletEmitter); 
      	public const int TotalEntityTypeCount = ((int)(EEntityType.EnumCount) -1);
    }

    public enum EComponentType : int {
        None,
        EnemyTag,
        BulletTag,
        SpawnerTag,
        UnitData,
        EmitterData,
        AIData,
        AnimData, 
        EnumCount
    }

    public class CompoenntIds {
      public const int EnemyTag = (int)(EComponentType.EnemyTag);
      public const int BulletTag = (int)(EComponentType.BulletTag);
      public const int SpawnerTag = (int)(EComponentType.SpawnerTag);
      public const int UnitData = (int)(EComponentType.UnitData);
      public const int EmitterData = (int)(EComponentType.EmitterData);
      public const int AIData = (int)(EComponentType.AIData);
      public const int AnimData = (int)(EComponentType.AnimData); 
      public const int TotalComponentTypeCount = ((int)(EComponentType.EnumCount) -1);
    }



    public enum ECampType : int {
        Player = 0,
        Enemy = 1,
        Other = 2, 
    }
    public enum EItemType : int {
        AddLife = 0,
        Boom = 1,
        Upgrade = 2,
        EnumCount = 3, 
    }
    public enum EDir : int {
        Up = 0,
        Left = 1,
        Down = 2,
        Right = 3,
        EnumCount = 4, 
    } 


    public enum E_EntityOfEnemyTag{
        Enemy,
    }
    public enum E_EntityOfBulletTag{
        Bullet,
    }
    public enum E_EntityOfSpawnerTag{
        BulletEmitter,
    }
    public enum E_EntityOfUnitData{
        Enemy,
        Bullet,
    }
    public enum E_EntityOfEmitterData{
        BulletEmitter,
    }
    public enum E_EntityOfAIData{
        Enemy,
    }
    public enum E_EntityOfAnimData{
        Enemy,
    }
    public enum E_FieldOfEnemyTag{
        Padding,
    }
    public enum E_FieldOfBulletTag{
        Padding,
    }
    public enum E_FieldOfSpawnerTag{
        Padding,
    }
    public enum E_FieldOfUnitData{
        Attack,
        Defence,
        Health,
    }
    public enum E_FieldOfEmitterData{
        Deg,
        Count,
        LiveTime,
        Interval,
        Timer,
    }
    public enum E_FieldOfAIData{
        AITimer,
        TargetDeg,
        LerpInterval,
        LerpTimer,
    }
    public enum E_FieldOfAnimData{
        Timer,
        LerpTimer,
        AnimId1,
        AnimId2,
    }
}                                                                                
}                                                                                               