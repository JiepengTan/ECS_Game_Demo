
//------------------------------------------------------------------------------    
// <auto-generated>                                                                 
//     This code was generated by GamesTan.Tools.MacroExpansion, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null. 
//     https://github.com/JiepengTan/LockstepECS                                         
//     Changes to this file may cause incorrect behavior and will be lost if        
//     the code is regenerated.                                                     
// </auto-generated>                                                                
//------------------------------------------------------------------------------  

//Power by ME //src: https://github.com/JiepengTan/ME  

//#define DONT_USE_GENERATE_CODE                                                                 
                                                                                                 
using System.Linq;                                                                               
using System.Runtime.InteropServices;                                                            
using System;                                                                                    
using System.Collections.Generic;                                                                
using System.Collections;                                                                        
using System.Runtime.CompilerServices;                                                           
using Lockstep.Game;                                                                             
using Lockstep.Math;                                                                             
using Unity.Burst;                                                                               
using Unity.Mathematics;                                                                                                                                                                            
namespace GamesTan.ECS.Game {  
    using GamesTan.ECSInternal;
    public unsafe partial class _EntityManager {
        internal NativeEntityArray<PClassA> _PClassAAry;
        internal NativeEntityArray<SubClassA> _SubClassAAry;
        internal NativeEntityArray<SubClassB> _SubClassBAry;
        internal NativeEntityArray<Enemy> _EnemyAry;
        internal NativeEntityArray<Bullet> _BulletAry;
        internal NativeEntityArray<BulletEmitter> _BulletEmitterAry; 
        internal unsafe void Alloc(){
            _PClassAAry.Alloc((int)EEntityType.PClassA,128);
            _SubClassAAry.Alloc((int)EEntityType.SubClassA,128);
            _SubClassBAry.Alloc((int)EEntityType.SubClassB,128);
            _EnemyAry.Alloc((int)EEntityType.Enemy,128);
            _BulletAry.Alloc((int)EEntityType.Bullet,128);
            _BulletEmitterAry.Alloc((int)EEntityType.BulletEmitter,128); 
        }
        internal unsafe void Free(){
            _PClassAAry.Free();
            _SubClassAAry.Free();
            _SubClassBAry.Free();
            _EnemyAry.Free();
            _BulletAry.Free();
            _BulletEmitterAry.Free(); 
        }
        internal _EntityManager Clone(){
            var ret = new _EntityManager();
            CopyTo(ret);
            return ret;
        }
        internal void CopyTo(_EntityManager dst){
            _PClassAAry.CopyTo(ref dst._PClassAAry);
            _SubClassAAry.CopyTo(ref dst._SubClassAAry);
            _SubClassBAry.CopyTo(ref dst._SubClassBAry);
            _EnemyAry.CopyTo(ref dst._EnemyAry);
            _BulletAry.CopyTo(ref dst._BulletAry);
            _BulletEmitterAry.CopyTo(ref dst._BulletEmitterAry); 
        }

        internal unsafe PClassA* CreateTempPClassA(Context context) {
            return _PClassAAry.CreateTempEntity(context);
        }
        internal unsafe PClassA* GetTempPClassA(int idx) {
            return _PClassAAry.GetTempEntity(idx);
        }
        internal unsafe void ClearTempPClassAAry(){
            if (_PClassAAry._WaitCreateCount > 0) {
                var len = _PClassAAry._WaitCreateCount;
                var ptr = _PClassAAry._WaitCreateAry.GetPointer(0);
                for(int i =0;i < len; ++i,++ptr){
                    *ptr = _DefaultDefine.PClassA;
                    ptr->_entity._ref._type = (int)EEntityType.PClassA;
                }
                _PClassAAry._WaitCreateCount = 0;
            }
        }
        internal unsafe SubClassA* CreateTempSubClassA(Context context) {
            return _SubClassAAry.CreateTempEntity(context);
        }
        internal unsafe SubClassA* GetTempSubClassA(int idx) {
            return _SubClassAAry.GetTempEntity(idx);
        }
        internal unsafe void ClearTempSubClassAAry(){
            if (_SubClassAAry._WaitCreateCount > 0) {
                var len = _SubClassAAry._WaitCreateCount;
                var ptr = _SubClassAAry._WaitCreateAry.GetPointer(0);
                for(int i =0;i < len; ++i,++ptr){
                    *ptr = _DefaultDefine.SubClassA;
                    ptr->_entity._ref._type = (int)EEntityType.SubClassA;
                }
                _SubClassAAry._WaitCreateCount = 0;
            }
        }
        internal unsafe SubClassB* CreateTempSubClassB(Context context) {
            return _SubClassBAry.CreateTempEntity(context);
        }
        internal unsafe SubClassB* GetTempSubClassB(int idx) {
            return _SubClassBAry.GetTempEntity(idx);
        }
        internal unsafe void ClearTempSubClassBAry(){
            if (_SubClassBAry._WaitCreateCount > 0) {
                var len = _SubClassBAry._WaitCreateCount;
                var ptr = _SubClassBAry._WaitCreateAry.GetPointer(0);
                for(int i =0;i < len; ++i,++ptr){
                    *ptr = _DefaultDefine.SubClassB;
                    ptr->_entity._ref._type = (int)EEntityType.SubClassB;
                }
                _SubClassBAry._WaitCreateCount = 0;
            }
        }
        internal unsafe Enemy* CreateTempEnemy(Context context) {
            return _EnemyAry.CreateTempEntity(context);
        }
        internal unsafe Enemy* GetTempEnemy(int idx) {
            return _EnemyAry.GetTempEntity(idx);
        }
        internal unsafe void ClearTempEnemyAry(){
            if (_EnemyAry._WaitCreateCount > 0) {
                var len = _EnemyAry._WaitCreateCount;
                var ptr = _EnemyAry._WaitCreateAry.GetPointer(0);
                for(int i =0;i < len; ++i,++ptr){
                    *ptr = _DefaultDefine.Enemy;
                    ptr->_entity._ref._type = (int)EEntityType.Enemy;
                }
                _EnemyAry._WaitCreateCount = 0;
            }
        }
        internal unsafe Bullet* CreateTempBullet(Context context) {
            return _BulletAry.CreateTempEntity(context);
        }
        internal unsafe Bullet* GetTempBullet(int idx) {
            return _BulletAry.GetTempEntity(idx);
        }
        internal unsafe void ClearTempBulletAry(){
            if (_BulletAry._WaitCreateCount > 0) {
                var len = _BulletAry._WaitCreateCount;
                var ptr = _BulletAry._WaitCreateAry.GetPointer(0);
                for(int i =0;i < len; ++i,++ptr){
                    *ptr = _DefaultDefine.Bullet;
                    ptr->_entity._ref._type = (int)EEntityType.Bullet;
                }
                _BulletAry._WaitCreateCount = 0;
            }
        }
        internal unsafe BulletEmitter* CreateTempBulletEmitter(Context context) {
            return _BulletEmitterAry.CreateTempEntity(context);
        }
        internal unsafe BulletEmitter* GetTempBulletEmitter(int idx) {
            return _BulletEmitterAry.GetTempEntity(idx);
        }
        internal unsafe void ClearTempBulletEmitterAry(){
            if (_BulletEmitterAry._WaitCreateCount > 0) {
                var len = _BulletEmitterAry._WaitCreateCount;
                var ptr = _BulletEmitterAry._WaitCreateAry.GetPointer(0);
                for(int i =0;i < len; ++i,++ptr){
                    *ptr = _DefaultDefine.BulletEmitter;
                    ptr->_entity._ref._type = (int)EEntityType.BulletEmitter;
                }
                _BulletEmitterAry._WaitCreateCount = 0;
            }
        } 

        internal NativeArray<int> GetAllMeshRenderData_Padding(E_EntityOfMeshRenderData entity){
            switch(entity){
                case E_EntityOfMeshRenderData.Bullet: return _GetAllBullet_MeshRenderData<int>(_GetOffsetOfMeshRenderData_Padding()); break;
                case E_EntityOfMeshRenderData.BulletEmitter: return _GetAllBulletEmitter_MeshRenderData<int>(_GetOffsetOfMeshRenderData_Padding()); break;
            }
            return new NativeArray<int>();
        }
        internal NativeArray<float4> GetAllAnimRenderData_AnimInfo0(E_EntityOfAnimRenderData entity){
            switch(entity){
                case E_EntityOfAnimRenderData.Enemy: return _GetAllEnemy_AnimRenderData<float4>(_GetOffsetOfAnimRenderData_AnimInfo0()); break;
            }
            return new NativeArray<float4>();
        }
        internal NativeArray<float4> GetAllAnimRenderData_AnimInfo1(E_EntityOfAnimRenderData entity){
            switch(entity){
                case E_EntityOfAnimRenderData.Enemy: return _GetAllEnemy_AnimRenderData<float4>(_GetOffsetOfAnimRenderData_AnimInfo1()); break;
            }
            return new NativeArray<float4>();
        }
        internal NativeArray<float4> GetAllAnimRenderData_AnimInfo2(E_EntityOfAnimRenderData entity){
            switch(entity){
                case E_EntityOfAnimRenderData.Enemy: return _GetAllEnemy_AnimRenderData<float4>(_GetOffsetOfAnimRenderData_AnimInfo2()); break;
            }
            return new NativeArray<float4>();
        }
        internal NativeArray<float4> GetAllAnimRenderData_AnimInfo3(E_EntityOfAnimRenderData entity){
            switch(entity){
                case E_EntityOfAnimRenderData.Enemy: return _GetAllEnemy_AnimRenderData<float4>(_GetOffsetOfAnimRenderData_AnimInfo3()); break;
            }
            return new NativeArray<float4>();
        }
        internal NativeArray<int2> GetAllPhysicData_GridCoord(E_EntityOfPhysicData entity){
            switch(entity){
                case E_EntityOfPhysicData.PClassA: return _GetAllPClassA_PhysicData<int2>(_GetOffsetOfPhysicData_GridCoord()); break;
                case E_EntityOfPhysicData.SubClassA: return _GetAllSubClassA_PhysicData<int2>(_GetOffsetOfPhysicData_GridCoord()); break;
                case E_EntityOfPhysicData.SubClassB: return _GetAllSubClassB_PhysicData<int2>(_GetOffsetOfPhysicData_GridCoord()); break;
                case E_EntityOfPhysicData.Enemy: return _GetAllEnemy_PhysicData<int2>(_GetOffsetOfPhysicData_GridCoord()); break;
                case E_EntityOfPhysicData.Bullet: return _GetAllBullet_PhysicData<int2>(_GetOffsetOfPhysicData_GridCoord()); break;
                case E_EntityOfPhysicData.BulletEmitter: return _GetAllBulletEmitter_PhysicData<int2>(_GetOffsetOfPhysicData_GridCoord()); break;
            }
            return new NativeArray<int2>();
        }
        internal NativeArray<float> GetAllPhysicData_Radius(E_EntityOfPhysicData entity){
            switch(entity){
                case E_EntityOfPhysicData.PClassA: return _GetAllPClassA_PhysicData<float>(_GetOffsetOfPhysicData_Radius()); break;
                case E_EntityOfPhysicData.SubClassA: return _GetAllSubClassA_PhysicData<float>(_GetOffsetOfPhysicData_Radius()); break;
                case E_EntityOfPhysicData.SubClassB: return _GetAllSubClassB_PhysicData<float>(_GetOffsetOfPhysicData_Radius()); break;
                case E_EntityOfPhysicData.Enemy: return _GetAllEnemy_PhysicData<float>(_GetOffsetOfPhysicData_Radius()); break;
                case E_EntityOfPhysicData.Bullet: return _GetAllBullet_PhysicData<float>(_GetOffsetOfPhysicData_Radius()); break;
                case E_EntityOfPhysicData.BulletEmitter: return _GetAllBulletEmitter_PhysicData<float>(_GetOffsetOfPhysicData_Radius()); break;
            }
            return new NativeArray<float>();
        }
        internal NativeArray<float> GetAllPhysicData_Speed(E_EntityOfPhysicData entity){
            switch(entity){
                case E_EntityOfPhysicData.PClassA: return _GetAllPClassA_PhysicData<float>(_GetOffsetOfPhysicData_Speed()); break;
                case E_EntityOfPhysicData.SubClassA: return _GetAllSubClassA_PhysicData<float>(_GetOffsetOfPhysicData_Speed()); break;
                case E_EntityOfPhysicData.SubClassB: return _GetAllSubClassB_PhysicData<float>(_GetOffsetOfPhysicData_Speed()); break;
                case E_EntityOfPhysicData.Enemy: return _GetAllEnemy_PhysicData<float>(_GetOffsetOfPhysicData_Speed()); break;
                case E_EntityOfPhysicData.Bullet: return _GetAllBullet_PhysicData<float>(_GetOffsetOfPhysicData_Speed()); break;
                case E_EntityOfPhysicData.BulletEmitter: return _GetAllBulletEmitter_PhysicData<float>(_GetOffsetOfPhysicData_Speed()); break;
            }
            return new NativeArray<float>();
        }
        internal NativeArray<float> GetAllPhysicData_RotateSpeed(E_EntityOfPhysicData entity){
            switch(entity){
                case E_EntityOfPhysicData.PClassA: return _GetAllPClassA_PhysicData<float>(_GetOffsetOfPhysicData_RotateSpeed()); break;
                case E_EntityOfPhysicData.SubClassA: return _GetAllSubClassA_PhysicData<float>(_GetOffsetOfPhysicData_RotateSpeed()); break;
                case E_EntityOfPhysicData.SubClassB: return _GetAllSubClassB_PhysicData<float>(_GetOffsetOfPhysicData_RotateSpeed()); break;
                case E_EntityOfPhysicData.Enemy: return _GetAllEnemy_PhysicData<float>(_GetOffsetOfPhysicData_RotateSpeed()); break;
                case E_EntityOfPhysicData.Bullet: return _GetAllBullet_PhysicData<float>(_GetOffsetOfPhysicData_RotateSpeed()); break;
                case E_EntityOfPhysicData.BulletEmitter: return _GetAllBulletEmitter_PhysicData<float>(_GetOffsetOfPhysicData_RotateSpeed()); break;
            }
            return new NativeArray<float>();
        }
        internal NativeArray<int> GetAllBasicData_GObjectId(E_EntityOfBasicData entity){
            switch(entity){
                case E_EntityOfBasicData.PClassA: return _GetAllPClassA_BasicData<int>(_GetOffsetOfBasicData_GObjectId()); break;
                case E_EntityOfBasicData.SubClassA: return _GetAllSubClassA_BasicData<int>(_GetOffsetOfBasicData_GObjectId()); break;
                case E_EntityOfBasicData.SubClassB: return _GetAllSubClassB_BasicData<int>(_GetOffsetOfBasicData_GObjectId()); break;
                case E_EntityOfBasicData.Enemy: return _GetAllEnemy_BasicData<int>(_GetOffsetOfBasicData_GObjectId()); break;
                case E_EntityOfBasicData.Bullet: return _GetAllBullet_BasicData<int>(_GetOffsetOfBasicData_GObjectId()); break;
                case E_EntityOfBasicData.BulletEmitter: return _GetAllBulletEmitter_BasicData<int>(_GetOffsetOfBasicData_GObjectId()); break;
            }
            return new NativeArray<int>();
        }
        internal NativeArray<Bitset32> GetAllBasicData_StatusData(E_EntityOfBasicData entity){
            switch(entity){
                case E_EntityOfBasicData.PClassA: return _GetAllPClassA_BasicData<Bitset32>(_GetOffsetOfBasicData_StatusData()); break;
                case E_EntityOfBasicData.SubClassA: return _GetAllSubClassA_BasicData<Bitset32>(_GetOffsetOfBasicData_StatusData()); break;
                case E_EntityOfBasicData.SubClassB: return _GetAllSubClassB_BasicData<Bitset32>(_GetOffsetOfBasicData_StatusData()); break;
                case E_EntityOfBasicData.Enemy: return _GetAllEnemy_BasicData<Bitset32>(_GetOffsetOfBasicData_StatusData()); break;
                case E_EntityOfBasicData.Bullet: return _GetAllBullet_BasicData<Bitset32>(_GetOffsetOfBasicData_StatusData()); break;
                case E_EntityOfBasicData.BulletEmitter: return _GetAllBulletEmitter_BasicData<Bitset32>(_GetOffsetOfBasicData_StatusData()); break;
            }
            return new NativeArray<Bitset32>();
        }
        internal NativeArray<int> GetAllEnemyTag_Padding(E_EntityOfEnemyTag entity){
            switch(entity){
                case E_EntityOfEnemyTag.Enemy: return _GetAllEnemy_EnemyTag<int>(_GetOffsetOfEnemyTag_Padding()); break;
            }
            return new NativeArray<int>();
        }
        internal NativeArray<int> GetAllBulletTag_Padding(E_EntityOfBulletTag entity){
            switch(entity){
                case E_EntityOfBulletTag.Bullet: return _GetAllBullet_BulletTag<int>(_GetOffsetOfBulletTag_Padding()); break;
            }
            return new NativeArray<int>();
        }
        internal NativeArray<int> GetAllSpawnerTag_Padding(E_EntityOfSpawnerTag entity){
            switch(entity){
                case E_EntityOfSpawnerTag.BulletEmitter: return _GetAllBulletEmitter_SpawnerTag<int>(_GetOffsetOfSpawnerTag_Padding()); break;
            }
            return new NativeArray<int>();
        }
        internal NativeArray<int> GetAllUnitData_Attack(E_EntityOfUnitData entity){
            switch(entity){
                case E_EntityOfUnitData.Enemy: return _GetAllEnemy_UnitData<int>(_GetOffsetOfUnitData_Attack()); break;
                case E_EntityOfUnitData.Bullet: return _GetAllBullet_UnitData<int>(_GetOffsetOfUnitData_Attack()); break;
            }
            return new NativeArray<int>();
        }
        internal NativeArray<int> GetAllUnitData_Defence(E_EntityOfUnitData entity){
            switch(entity){
                case E_EntityOfUnitData.Enemy: return _GetAllEnemy_UnitData<int>(_GetOffsetOfUnitData_Defence()); break;
                case E_EntityOfUnitData.Bullet: return _GetAllBullet_UnitData<int>(_GetOffsetOfUnitData_Defence()); break;
            }
            return new NativeArray<int>();
        }
        internal NativeArray<int> GetAllUnitData_Health(E_EntityOfUnitData entity){
            switch(entity){
                case E_EntityOfUnitData.Enemy: return _GetAllEnemy_UnitData<int>(_GetOffsetOfUnitData_Health()); break;
                case E_EntityOfUnitData.Bullet: return _GetAllBullet_UnitData<int>(_GetOffsetOfUnitData_Health()); break;
            }
            return new NativeArray<int>();
        }
        internal NativeArray<int> GetAllEmitterData_Deg(E_EntityOfEmitterData entity){
            switch(entity){
                case E_EntityOfEmitterData.BulletEmitter: return _GetAllBulletEmitter_EmitterData<int>(_GetOffsetOfEmitterData_Deg()); break;
            }
            return new NativeArray<int>();
        }
        internal NativeArray<int> GetAllEmitterData_Count(E_EntityOfEmitterData entity){
            switch(entity){
                case E_EntityOfEmitterData.BulletEmitter: return _GetAllBulletEmitter_EmitterData<int>(_GetOffsetOfEmitterData_Count()); break;
            }
            return new NativeArray<int>();
        }
        internal NativeArray<float> GetAllEmitterData_LiveTime(E_EntityOfEmitterData entity){
            switch(entity){
                case E_EntityOfEmitterData.BulletEmitter: return _GetAllBulletEmitter_EmitterData<float>(_GetOffsetOfEmitterData_LiveTime()); break;
            }
            return new NativeArray<float>();
        }
        internal NativeArray<float> GetAllEmitterData_Interval(E_EntityOfEmitterData entity){
            switch(entity){
                case E_EntityOfEmitterData.BulletEmitter: return _GetAllBulletEmitter_EmitterData<float>(_GetOffsetOfEmitterData_Interval()); break;
            }
            return new NativeArray<float>();
        }
        internal NativeArray<float> GetAllEmitterData_Timer(E_EntityOfEmitterData entity){
            switch(entity){
                case E_EntityOfEmitterData.BulletEmitter: return _GetAllBulletEmitter_EmitterData<float>(_GetOffsetOfEmitterData_Timer()); break;
            }
            return new NativeArray<float>();
        }
        internal NativeArray<float> GetAllAIData_AITimer(E_EntityOfAIData entity){
            switch(entity){
                case E_EntityOfAIData.Enemy: return _GetAllEnemy_AIData<float>(_GetOffsetOfAIData_AITimer()); break;
            }
            return new NativeArray<float>();
        }
        internal NativeArray<float> GetAllAIData_TargetDeg(E_EntityOfAIData entity){
            switch(entity){
                case E_EntityOfAIData.Enemy: return _GetAllEnemy_AIData<float>(_GetOffsetOfAIData_TargetDeg()); break;
            }
            return new NativeArray<float>();
        }
        internal NativeArray<float> GetAllAIData_LerpInterval(E_EntityOfAIData entity){
            switch(entity){
                case E_EntityOfAIData.Enemy: return _GetAllEnemy_AIData<float>(_GetOffsetOfAIData_LerpInterval()); break;
            }
            return new NativeArray<float>();
        }
        internal NativeArray<float> GetAllAIData_LerpTimer(E_EntityOfAIData entity){
            switch(entity){
                case E_EntityOfAIData.Enemy: return _GetAllEnemy_AIData<float>(_GetOffsetOfAIData_LerpTimer()); break;
            }
            return new NativeArray<float>();
        }
        internal NativeArray<float4> GetAllAnimData_Timer(E_EntityOfAnimData entity){
            switch(entity){
                case E_EntityOfAnimData.Enemy: return _GetAllEnemy_AnimData<float4>(_GetOffsetOfAnimData_Timer()); break;
            }
            return new NativeArray<float4>();
        }
        internal NativeArray<float4> GetAllAnimData_LerpTimer(E_EntityOfAnimData entity){
            switch(entity){
                case E_EntityOfAnimData.Enemy: return _GetAllEnemy_AnimData<float4>(_GetOffsetOfAnimData_LerpTimer()); break;
            }
            return new NativeArray<float4>();
        }
        internal NativeArray<int4> GetAllAnimData_AnimId1(E_EntityOfAnimData entity){
            switch(entity){
                case E_EntityOfAnimData.Enemy: return _GetAllEnemy_AnimData<int4>(_GetOffsetOfAnimData_AnimId1()); break;
            }
            return new NativeArray<int4>();
        }
        internal NativeArray<int4> GetAllAnimData_AnimId2(E_EntityOfAnimData entity){
            switch(entity){
                case E_EntityOfAnimData.Enemy: return _GetAllEnemy_AnimData<int4>(_GetOffsetOfAnimData_AnimId2()); break;
            }
            return new NativeArray<int4>();
        }
        internal NativeArray<int> GetAllAnimator_Pad(E_EntityOfAnimator entity){
            switch(entity){

            }
            return new NativeArray<int>();
        }
        internal NativeArray<CollisionShape> GetAllCollisionAgent_Collider(E_EntityOfCollisionAgent entity){
            switch(entity){

            }
            return new NativeArray<CollisionShape>();
        }
        internal NativeArray<bool> GetAllCollisionAgent_IsTrigger(E_EntityOfCollisionAgent entity){
            switch(entity){

            }
            return new NativeArray<bool>();
        }
        internal NativeArray<int> GetAllCollisionAgent_Layer(E_EntityOfCollisionAgent entity){
            switch(entity){

            }
            return new NativeArray<int>();
        }
        internal NativeArray<bool> GetAllCollisionAgent_IsEnable(E_EntityOfCollisionAgent entity){
            switch(entity){

            }
            return new NativeArray<bool>();
        }
        internal NativeArray<bool> GetAllCollisionAgent_IsSleep(E_EntityOfCollisionAgent entity){
            switch(entity){

            }
            return new NativeArray<bool>();
        }
        internal NativeArray<float> GetAllCollisionAgent_Mass(E_EntityOfCollisionAgent entity){
            switch(entity){

            }
            return new NativeArray<float>();
        }
        internal NativeArray<float> GetAllCollisionAgent_AngularSpeed(E_EntityOfCollisionAgent entity){
            switch(entity){

            }
            return new NativeArray<float>();
        }
        internal NativeArray<float3> GetAllCollisionAgent_Speed(E_EntityOfCollisionAgent entity){
            switch(entity){

            }
            return new NativeArray<float3>();
        }
        internal NativeArray<int> GetAllNavMeshAgent_Pad(E_EntityOfNavMeshAgent entity){
            switch(entity){

            }
            return new NativeArray<int>();
        }
        internal NativeArray<int> GetAllAssetData_AssetId(E_EntityOfAssetData entity){
            switch(entity){
                case E_EntityOfAssetData.PClassA: return _GetAllPClassA_AssetData<int>(_GetOffsetOfAssetData_AssetId()); break;
                case E_EntityOfAssetData.SubClassA: return _GetAllSubClassA_AssetData<int>(_GetOffsetOfAssetData_AssetId()); break;
                case E_EntityOfAssetData.SubClassB: return _GetAllSubClassB_AssetData<int>(_GetOffsetOfAssetData_AssetId()); break;
                case E_EntityOfAssetData.Enemy: return _GetAllEnemy_AssetData<int>(_GetOffsetOfAssetData_AssetId()); break;
                case E_EntityOfAssetData.Bullet: return _GetAllBullet_AssetData<int>(_GetOffsetOfAssetData_AssetId()); break;
                case E_EntityOfAssetData.BulletEmitter: return _GetAllBulletEmitter_AssetData<int>(_GetOffsetOfAssetData_AssetId()); break;
            }
            return new NativeArray<int>();
        }
        internal NativeArray<int> GetAllAssetData_InstancePrefabIdx(E_EntityOfAssetData entity){
            switch(entity){
                case E_EntityOfAssetData.PClassA: return _GetAllPClassA_AssetData<int>(_GetOffsetOfAssetData_InstancePrefabIdx()); break;
                case E_EntityOfAssetData.SubClassA: return _GetAllSubClassA_AssetData<int>(_GetOffsetOfAssetData_InstancePrefabIdx()); break;
                case E_EntityOfAssetData.SubClassB: return _GetAllSubClassB_AssetData<int>(_GetOffsetOfAssetData_InstancePrefabIdx()); break;
                case E_EntityOfAssetData.Enemy: return _GetAllEnemy_AssetData<int>(_GetOffsetOfAssetData_InstancePrefabIdx()); break;
                case E_EntityOfAssetData.Bullet: return _GetAllBullet_AssetData<int>(_GetOffsetOfAssetData_InstancePrefabIdx()); break;
                case E_EntityOfAssetData.BulletEmitter: return _GetAllBulletEmitter_AssetData<int>(_GetOffsetOfAssetData_InstancePrefabIdx()); break;
            }
            return new NativeArray<int>();
        }
        internal NativeArray<float2> GetAllTransform2D_Position(E_EntityOfTransform2D entity){
            switch(entity){

            }
            return new NativeArray<float2>();
        }
        internal NativeArray<float> GetAllTransform2D_Deg(E_EntityOfTransform2D entity){
            switch(entity){

            }
            return new NativeArray<float>();
        }
        internal NativeArray<float> GetAllTransform2D_Scale(E_EntityOfTransform2D entity){
            switch(entity){

            }
            return new NativeArray<float>();
        }
        internal NativeArray<float3> GetAllTransform3D_Position(E_EntityOfTransform3D entity){
            switch(entity){
                case E_EntityOfTransform3D.PClassA: return _GetAllPClassA_Transform3D<float3>(_GetOffsetOfTransform3D_Position()); break;
                case E_EntityOfTransform3D.SubClassA: return _GetAllSubClassA_Transform3D<float3>(_GetOffsetOfTransform3D_Position()); break;
                case E_EntityOfTransform3D.SubClassB: return _GetAllSubClassB_Transform3D<float3>(_GetOffsetOfTransform3D_Position()); break;
                case E_EntityOfTransform3D.Enemy: return _GetAllEnemy_Transform3D<float3>(_GetOffsetOfTransform3D_Position()); break;
                case E_EntityOfTransform3D.Bullet: return _GetAllBullet_Transform3D<float3>(_GetOffsetOfTransform3D_Position()); break;
                case E_EntityOfTransform3D.BulletEmitter: return _GetAllBulletEmitter_Transform3D<float3>(_GetOffsetOfTransform3D_Position()); break;
            }
            return new NativeArray<float3>();
        }
        internal NativeArray<float3> GetAllTransform3D_Rotation(E_EntityOfTransform3D entity){
            switch(entity){
                case E_EntityOfTransform3D.PClassA: return _GetAllPClassA_Transform3D<float3>(_GetOffsetOfTransform3D_Rotation()); break;
                case E_EntityOfTransform3D.SubClassA: return _GetAllSubClassA_Transform3D<float3>(_GetOffsetOfTransform3D_Rotation()); break;
                case E_EntityOfTransform3D.SubClassB: return _GetAllSubClassB_Transform3D<float3>(_GetOffsetOfTransform3D_Rotation()); break;
                case E_EntityOfTransform3D.Enemy: return _GetAllEnemy_Transform3D<float3>(_GetOffsetOfTransform3D_Rotation()); break;
                case E_EntityOfTransform3D.Bullet: return _GetAllBullet_Transform3D<float3>(_GetOffsetOfTransform3D_Rotation()); break;
                case E_EntityOfTransform3D.BulletEmitter: return _GetAllBulletEmitter_Transform3D<float3>(_GetOffsetOfTransform3D_Rotation()); break;
            }
            return new NativeArray<float3>();
        }
        internal NativeArray<float3> GetAllTransform3D_Scale(E_EntityOfTransform3D entity){
            switch(entity){
                case E_EntityOfTransform3D.PClassA: return _GetAllPClassA_Transform3D<float3>(_GetOffsetOfTransform3D_Scale()); break;
                case E_EntityOfTransform3D.SubClassA: return _GetAllSubClassA_Transform3D<float3>(_GetOffsetOfTransform3D_Scale()); break;
                case E_EntityOfTransform3D.SubClassB: return _GetAllSubClassB_Transform3D<float3>(_GetOffsetOfTransform3D_Scale()); break;
                case E_EntityOfTransform3D.Enemy: return _GetAllEnemy_Transform3D<float3>(_GetOffsetOfTransform3D_Scale()); break;
                case E_EntityOfTransform3D.Bullet: return _GetAllBullet_Transform3D<float3>(_GetOffsetOfTransform3D_Scale()); break;
                case E_EntityOfTransform3D.BulletEmitter: return _GetAllBulletEmitter_Transform3D<float3>(_GetOffsetOfTransform3D_Scale()); break;
            }
            return new NativeArray<float3>();
        }

        internal NativeArray<int> GetAllMeshRenderData_Padding(E_EntityOfMeshRenderData entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){
                case E_EntityOfMeshRenderData.Bullet: return _GetAllBullet_MeshRenderData<int>(_GetOffsetOfMeshRenderData_Padding(),filterFunc,out length); break;
                case E_EntityOfMeshRenderData.BulletEmitter: return _GetAllBulletEmitter_MeshRenderData<int>(_GetOffsetOfMeshRenderData_Padding(),filterFunc,out length); break;
            }
            length = 0;return new NativeArray<int>();
        }
        internal NativeArray<float4> GetAllAnimRenderData_AnimInfo0(E_EntityOfAnimRenderData entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){
                case E_EntityOfAnimRenderData.Enemy: return _GetAllEnemy_AnimRenderData<float4>(_GetOffsetOfAnimRenderData_AnimInfo0(),filterFunc,out length); break;
            }
            length = 0;return new NativeArray<float4>();
        }
        internal NativeArray<float4> GetAllAnimRenderData_AnimInfo1(E_EntityOfAnimRenderData entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){
                case E_EntityOfAnimRenderData.Enemy: return _GetAllEnemy_AnimRenderData<float4>(_GetOffsetOfAnimRenderData_AnimInfo1(),filterFunc,out length); break;
            }
            length = 0;return new NativeArray<float4>();
        }
        internal NativeArray<float4> GetAllAnimRenderData_AnimInfo2(E_EntityOfAnimRenderData entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){
                case E_EntityOfAnimRenderData.Enemy: return _GetAllEnemy_AnimRenderData<float4>(_GetOffsetOfAnimRenderData_AnimInfo2(),filterFunc,out length); break;
            }
            length = 0;return new NativeArray<float4>();
        }
        internal NativeArray<float4> GetAllAnimRenderData_AnimInfo3(E_EntityOfAnimRenderData entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){
                case E_EntityOfAnimRenderData.Enemy: return _GetAllEnemy_AnimRenderData<float4>(_GetOffsetOfAnimRenderData_AnimInfo3(),filterFunc,out length); break;
            }
            length = 0;return new NativeArray<float4>();
        }
        internal NativeArray<int2> GetAllPhysicData_GridCoord(E_EntityOfPhysicData entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){
                case E_EntityOfPhysicData.PClassA: return _GetAllPClassA_PhysicData<int2>(_GetOffsetOfPhysicData_GridCoord(),filterFunc,out length); break;
                case E_EntityOfPhysicData.SubClassA: return _GetAllSubClassA_PhysicData<int2>(_GetOffsetOfPhysicData_GridCoord(),filterFunc,out length); break;
                case E_EntityOfPhysicData.SubClassB: return _GetAllSubClassB_PhysicData<int2>(_GetOffsetOfPhysicData_GridCoord(),filterFunc,out length); break;
                case E_EntityOfPhysicData.Enemy: return _GetAllEnemy_PhysicData<int2>(_GetOffsetOfPhysicData_GridCoord(),filterFunc,out length); break;
                case E_EntityOfPhysicData.Bullet: return _GetAllBullet_PhysicData<int2>(_GetOffsetOfPhysicData_GridCoord(),filterFunc,out length); break;
                case E_EntityOfPhysicData.BulletEmitter: return _GetAllBulletEmitter_PhysicData<int2>(_GetOffsetOfPhysicData_GridCoord(),filterFunc,out length); break;
            }
            length = 0;return new NativeArray<int2>();
        }
        internal NativeArray<float> GetAllPhysicData_Radius(E_EntityOfPhysicData entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){
                case E_EntityOfPhysicData.PClassA: return _GetAllPClassA_PhysicData<float>(_GetOffsetOfPhysicData_Radius(),filterFunc,out length); break;
                case E_EntityOfPhysicData.SubClassA: return _GetAllSubClassA_PhysicData<float>(_GetOffsetOfPhysicData_Radius(),filterFunc,out length); break;
                case E_EntityOfPhysicData.SubClassB: return _GetAllSubClassB_PhysicData<float>(_GetOffsetOfPhysicData_Radius(),filterFunc,out length); break;
                case E_EntityOfPhysicData.Enemy: return _GetAllEnemy_PhysicData<float>(_GetOffsetOfPhysicData_Radius(),filterFunc,out length); break;
                case E_EntityOfPhysicData.Bullet: return _GetAllBullet_PhysicData<float>(_GetOffsetOfPhysicData_Radius(),filterFunc,out length); break;
                case E_EntityOfPhysicData.BulletEmitter: return _GetAllBulletEmitter_PhysicData<float>(_GetOffsetOfPhysicData_Radius(),filterFunc,out length); break;
            }
            length = 0;return new NativeArray<float>();
        }
        internal NativeArray<float> GetAllPhysicData_Speed(E_EntityOfPhysicData entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){
                case E_EntityOfPhysicData.PClassA: return _GetAllPClassA_PhysicData<float>(_GetOffsetOfPhysicData_Speed(),filterFunc,out length); break;
                case E_EntityOfPhysicData.SubClassA: return _GetAllSubClassA_PhysicData<float>(_GetOffsetOfPhysicData_Speed(),filterFunc,out length); break;
                case E_EntityOfPhysicData.SubClassB: return _GetAllSubClassB_PhysicData<float>(_GetOffsetOfPhysicData_Speed(),filterFunc,out length); break;
                case E_EntityOfPhysicData.Enemy: return _GetAllEnemy_PhysicData<float>(_GetOffsetOfPhysicData_Speed(),filterFunc,out length); break;
                case E_EntityOfPhysicData.Bullet: return _GetAllBullet_PhysicData<float>(_GetOffsetOfPhysicData_Speed(),filterFunc,out length); break;
                case E_EntityOfPhysicData.BulletEmitter: return _GetAllBulletEmitter_PhysicData<float>(_GetOffsetOfPhysicData_Speed(),filterFunc,out length); break;
            }
            length = 0;return new NativeArray<float>();
        }
        internal NativeArray<float> GetAllPhysicData_RotateSpeed(E_EntityOfPhysicData entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){
                case E_EntityOfPhysicData.PClassA: return _GetAllPClassA_PhysicData<float>(_GetOffsetOfPhysicData_RotateSpeed(),filterFunc,out length); break;
                case E_EntityOfPhysicData.SubClassA: return _GetAllSubClassA_PhysicData<float>(_GetOffsetOfPhysicData_RotateSpeed(),filterFunc,out length); break;
                case E_EntityOfPhysicData.SubClassB: return _GetAllSubClassB_PhysicData<float>(_GetOffsetOfPhysicData_RotateSpeed(),filterFunc,out length); break;
                case E_EntityOfPhysicData.Enemy: return _GetAllEnemy_PhysicData<float>(_GetOffsetOfPhysicData_RotateSpeed(),filterFunc,out length); break;
                case E_EntityOfPhysicData.Bullet: return _GetAllBullet_PhysicData<float>(_GetOffsetOfPhysicData_RotateSpeed(),filterFunc,out length); break;
                case E_EntityOfPhysicData.BulletEmitter: return _GetAllBulletEmitter_PhysicData<float>(_GetOffsetOfPhysicData_RotateSpeed(),filterFunc,out length); break;
            }
            length = 0;return new NativeArray<float>();
        }
        internal NativeArray<int> GetAllBasicData_GObjectId(E_EntityOfBasicData entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){
                case E_EntityOfBasicData.PClassA: return _GetAllPClassA_BasicData<int>(_GetOffsetOfBasicData_GObjectId(),filterFunc,out length); break;
                case E_EntityOfBasicData.SubClassA: return _GetAllSubClassA_BasicData<int>(_GetOffsetOfBasicData_GObjectId(),filterFunc,out length); break;
                case E_EntityOfBasicData.SubClassB: return _GetAllSubClassB_BasicData<int>(_GetOffsetOfBasicData_GObjectId(),filterFunc,out length); break;
                case E_EntityOfBasicData.Enemy: return _GetAllEnemy_BasicData<int>(_GetOffsetOfBasicData_GObjectId(),filterFunc,out length); break;
                case E_EntityOfBasicData.Bullet: return _GetAllBullet_BasicData<int>(_GetOffsetOfBasicData_GObjectId(),filterFunc,out length); break;
                case E_EntityOfBasicData.BulletEmitter: return _GetAllBulletEmitter_BasicData<int>(_GetOffsetOfBasicData_GObjectId(),filterFunc,out length); break;
            }
            length = 0;return new NativeArray<int>();
        }
        internal NativeArray<Bitset32> GetAllBasicData_StatusData(E_EntityOfBasicData entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){
                case E_EntityOfBasicData.PClassA: return _GetAllPClassA_BasicData<Bitset32>(_GetOffsetOfBasicData_StatusData(),filterFunc,out length); break;
                case E_EntityOfBasicData.SubClassA: return _GetAllSubClassA_BasicData<Bitset32>(_GetOffsetOfBasicData_StatusData(),filterFunc,out length); break;
                case E_EntityOfBasicData.SubClassB: return _GetAllSubClassB_BasicData<Bitset32>(_GetOffsetOfBasicData_StatusData(),filterFunc,out length); break;
                case E_EntityOfBasicData.Enemy: return _GetAllEnemy_BasicData<Bitset32>(_GetOffsetOfBasicData_StatusData(),filterFunc,out length); break;
                case E_EntityOfBasicData.Bullet: return _GetAllBullet_BasicData<Bitset32>(_GetOffsetOfBasicData_StatusData(),filterFunc,out length); break;
                case E_EntityOfBasicData.BulletEmitter: return _GetAllBulletEmitter_BasicData<Bitset32>(_GetOffsetOfBasicData_StatusData(),filterFunc,out length); break;
            }
            length = 0;return new NativeArray<Bitset32>();
        }
        internal NativeArray<int> GetAllEnemyTag_Padding(E_EntityOfEnemyTag entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){
                case E_EntityOfEnemyTag.Enemy: return _GetAllEnemy_EnemyTag<int>(_GetOffsetOfEnemyTag_Padding(),filterFunc,out length); break;
            }
            length = 0;return new NativeArray<int>();
        }
        internal NativeArray<int> GetAllBulletTag_Padding(E_EntityOfBulletTag entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){
                case E_EntityOfBulletTag.Bullet: return _GetAllBullet_BulletTag<int>(_GetOffsetOfBulletTag_Padding(),filterFunc,out length); break;
            }
            length = 0;return new NativeArray<int>();
        }
        internal NativeArray<int> GetAllSpawnerTag_Padding(E_EntityOfSpawnerTag entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){
                case E_EntityOfSpawnerTag.BulletEmitter: return _GetAllBulletEmitter_SpawnerTag<int>(_GetOffsetOfSpawnerTag_Padding(),filterFunc,out length); break;
            }
            length = 0;return new NativeArray<int>();
        }
        internal NativeArray<int> GetAllUnitData_Attack(E_EntityOfUnitData entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){
                case E_EntityOfUnitData.Enemy: return _GetAllEnemy_UnitData<int>(_GetOffsetOfUnitData_Attack(),filterFunc,out length); break;
                case E_EntityOfUnitData.Bullet: return _GetAllBullet_UnitData<int>(_GetOffsetOfUnitData_Attack(),filterFunc,out length); break;
            }
            length = 0;return new NativeArray<int>();
        }
        internal NativeArray<int> GetAllUnitData_Defence(E_EntityOfUnitData entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){
                case E_EntityOfUnitData.Enemy: return _GetAllEnemy_UnitData<int>(_GetOffsetOfUnitData_Defence(),filterFunc,out length); break;
                case E_EntityOfUnitData.Bullet: return _GetAllBullet_UnitData<int>(_GetOffsetOfUnitData_Defence(),filterFunc,out length); break;
            }
            length = 0;return new NativeArray<int>();
        }
        internal NativeArray<int> GetAllUnitData_Health(E_EntityOfUnitData entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){
                case E_EntityOfUnitData.Enemy: return _GetAllEnemy_UnitData<int>(_GetOffsetOfUnitData_Health(),filterFunc,out length); break;
                case E_EntityOfUnitData.Bullet: return _GetAllBullet_UnitData<int>(_GetOffsetOfUnitData_Health(),filterFunc,out length); break;
            }
            length = 0;return new NativeArray<int>();
        }
        internal NativeArray<int> GetAllEmitterData_Deg(E_EntityOfEmitterData entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){
                case E_EntityOfEmitterData.BulletEmitter: return _GetAllBulletEmitter_EmitterData<int>(_GetOffsetOfEmitterData_Deg(),filterFunc,out length); break;
            }
            length = 0;return new NativeArray<int>();
        }
        internal NativeArray<int> GetAllEmitterData_Count(E_EntityOfEmitterData entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){
                case E_EntityOfEmitterData.BulletEmitter: return _GetAllBulletEmitter_EmitterData<int>(_GetOffsetOfEmitterData_Count(),filterFunc,out length); break;
            }
            length = 0;return new NativeArray<int>();
        }
        internal NativeArray<float> GetAllEmitterData_LiveTime(E_EntityOfEmitterData entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){
                case E_EntityOfEmitterData.BulletEmitter: return _GetAllBulletEmitter_EmitterData<float>(_GetOffsetOfEmitterData_LiveTime(),filterFunc,out length); break;
            }
            length = 0;return new NativeArray<float>();
        }
        internal NativeArray<float> GetAllEmitterData_Interval(E_EntityOfEmitterData entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){
                case E_EntityOfEmitterData.BulletEmitter: return _GetAllBulletEmitter_EmitterData<float>(_GetOffsetOfEmitterData_Interval(),filterFunc,out length); break;
            }
            length = 0;return new NativeArray<float>();
        }
        internal NativeArray<float> GetAllEmitterData_Timer(E_EntityOfEmitterData entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){
                case E_EntityOfEmitterData.BulletEmitter: return _GetAllBulletEmitter_EmitterData<float>(_GetOffsetOfEmitterData_Timer(),filterFunc,out length); break;
            }
            length = 0;return new NativeArray<float>();
        }
        internal NativeArray<float> GetAllAIData_AITimer(E_EntityOfAIData entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){
                case E_EntityOfAIData.Enemy: return _GetAllEnemy_AIData<float>(_GetOffsetOfAIData_AITimer(),filterFunc,out length); break;
            }
            length = 0;return new NativeArray<float>();
        }
        internal NativeArray<float> GetAllAIData_TargetDeg(E_EntityOfAIData entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){
                case E_EntityOfAIData.Enemy: return _GetAllEnemy_AIData<float>(_GetOffsetOfAIData_TargetDeg(),filterFunc,out length); break;
            }
            length = 0;return new NativeArray<float>();
        }
        internal NativeArray<float> GetAllAIData_LerpInterval(E_EntityOfAIData entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){
                case E_EntityOfAIData.Enemy: return _GetAllEnemy_AIData<float>(_GetOffsetOfAIData_LerpInterval(),filterFunc,out length); break;
            }
            length = 0;return new NativeArray<float>();
        }
        internal NativeArray<float> GetAllAIData_LerpTimer(E_EntityOfAIData entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){
                case E_EntityOfAIData.Enemy: return _GetAllEnemy_AIData<float>(_GetOffsetOfAIData_LerpTimer(),filterFunc,out length); break;
            }
            length = 0;return new NativeArray<float>();
        }
        internal NativeArray<float4> GetAllAnimData_Timer(E_EntityOfAnimData entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){
                case E_EntityOfAnimData.Enemy: return _GetAllEnemy_AnimData<float4>(_GetOffsetOfAnimData_Timer(),filterFunc,out length); break;
            }
            length = 0;return new NativeArray<float4>();
        }
        internal NativeArray<float4> GetAllAnimData_LerpTimer(E_EntityOfAnimData entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){
                case E_EntityOfAnimData.Enemy: return _GetAllEnemy_AnimData<float4>(_GetOffsetOfAnimData_LerpTimer(),filterFunc,out length); break;
            }
            length = 0;return new NativeArray<float4>();
        }
        internal NativeArray<int4> GetAllAnimData_AnimId1(E_EntityOfAnimData entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){
                case E_EntityOfAnimData.Enemy: return _GetAllEnemy_AnimData<int4>(_GetOffsetOfAnimData_AnimId1(),filterFunc,out length); break;
            }
            length = 0;return new NativeArray<int4>();
        }
        internal NativeArray<int4> GetAllAnimData_AnimId2(E_EntityOfAnimData entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){
                case E_EntityOfAnimData.Enemy: return _GetAllEnemy_AnimData<int4>(_GetOffsetOfAnimData_AnimId2(),filterFunc,out length); break;
            }
            length = 0;return new NativeArray<int4>();
        }
        internal NativeArray<int> GetAllAnimator_Pad(E_EntityOfAnimator entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){

            }
            length = 0;return new NativeArray<int>();
        }
        internal NativeArray<CollisionShape> GetAllCollisionAgent_Collider(E_EntityOfCollisionAgent entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){

            }
            length = 0;return new NativeArray<CollisionShape>();
        }
        internal NativeArray<bool> GetAllCollisionAgent_IsTrigger(E_EntityOfCollisionAgent entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){

            }
            length = 0;return new NativeArray<bool>();
        }
        internal NativeArray<int> GetAllCollisionAgent_Layer(E_EntityOfCollisionAgent entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){

            }
            length = 0;return new NativeArray<int>();
        }
        internal NativeArray<bool> GetAllCollisionAgent_IsEnable(E_EntityOfCollisionAgent entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){

            }
            length = 0;return new NativeArray<bool>();
        }
        internal NativeArray<bool> GetAllCollisionAgent_IsSleep(E_EntityOfCollisionAgent entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){

            }
            length = 0;return new NativeArray<bool>();
        }
        internal NativeArray<float> GetAllCollisionAgent_Mass(E_EntityOfCollisionAgent entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){

            }
            length = 0;return new NativeArray<float>();
        }
        internal NativeArray<float> GetAllCollisionAgent_AngularSpeed(E_EntityOfCollisionAgent entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){

            }
            length = 0;return new NativeArray<float>();
        }
        internal NativeArray<float3> GetAllCollisionAgent_Speed(E_EntityOfCollisionAgent entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){

            }
            length = 0;return new NativeArray<float3>();
        }
        internal NativeArray<int> GetAllNavMeshAgent_Pad(E_EntityOfNavMeshAgent entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){

            }
            length = 0;return new NativeArray<int>();
        }
        internal NativeArray<int> GetAllAssetData_AssetId(E_EntityOfAssetData entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){
                case E_EntityOfAssetData.PClassA: return _GetAllPClassA_AssetData<int>(_GetOffsetOfAssetData_AssetId(),filterFunc,out length); break;
                case E_EntityOfAssetData.SubClassA: return _GetAllSubClassA_AssetData<int>(_GetOffsetOfAssetData_AssetId(),filterFunc,out length); break;
                case E_EntityOfAssetData.SubClassB: return _GetAllSubClassB_AssetData<int>(_GetOffsetOfAssetData_AssetId(),filterFunc,out length); break;
                case E_EntityOfAssetData.Enemy: return _GetAllEnemy_AssetData<int>(_GetOffsetOfAssetData_AssetId(),filterFunc,out length); break;
                case E_EntityOfAssetData.Bullet: return _GetAllBullet_AssetData<int>(_GetOffsetOfAssetData_AssetId(),filterFunc,out length); break;
                case E_EntityOfAssetData.BulletEmitter: return _GetAllBulletEmitter_AssetData<int>(_GetOffsetOfAssetData_AssetId(),filterFunc,out length); break;
            }
            length = 0;return new NativeArray<int>();
        }
        internal NativeArray<int> GetAllAssetData_InstancePrefabIdx(E_EntityOfAssetData entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){
                case E_EntityOfAssetData.PClassA: return _GetAllPClassA_AssetData<int>(_GetOffsetOfAssetData_InstancePrefabIdx(),filterFunc,out length); break;
                case E_EntityOfAssetData.SubClassA: return _GetAllSubClassA_AssetData<int>(_GetOffsetOfAssetData_InstancePrefabIdx(),filterFunc,out length); break;
                case E_EntityOfAssetData.SubClassB: return _GetAllSubClassB_AssetData<int>(_GetOffsetOfAssetData_InstancePrefabIdx(),filterFunc,out length); break;
                case E_EntityOfAssetData.Enemy: return _GetAllEnemy_AssetData<int>(_GetOffsetOfAssetData_InstancePrefabIdx(),filterFunc,out length); break;
                case E_EntityOfAssetData.Bullet: return _GetAllBullet_AssetData<int>(_GetOffsetOfAssetData_InstancePrefabIdx(),filterFunc,out length); break;
                case E_EntityOfAssetData.BulletEmitter: return _GetAllBulletEmitter_AssetData<int>(_GetOffsetOfAssetData_InstancePrefabIdx(),filterFunc,out length); break;
            }
            length = 0;return new NativeArray<int>();
        }
        internal NativeArray<float2> GetAllTransform2D_Position(E_EntityOfTransform2D entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){

            }
            length = 0;return new NativeArray<float2>();
        }
        internal NativeArray<float> GetAllTransform2D_Deg(E_EntityOfTransform2D entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){

            }
            length = 0;return new NativeArray<float>();
        }
        internal NativeArray<float> GetAllTransform2D_Scale(E_EntityOfTransform2D entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){

            }
            length = 0;return new NativeArray<float>();
        }
        internal NativeArray<float3> GetAllTransform3D_Position(E_EntityOfTransform3D entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){
                case E_EntityOfTransform3D.PClassA: return _GetAllPClassA_Transform3D<float3>(_GetOffsetOfTransform3D_Position(),filterFunc,out length); break;
                case E_EntityOfTransform3D.SubClassA: return _GetAllSubClassA_Transform3D<float3>(_GetOffsetOfTransform3D_Position(),filterFunc,out length); break;
                case E_EntityOfTransform3D.SubClassB: return _GetAllSubClassB_Transform3D<float3>(_GetOffsetOfTransform3D_Position(),filterFunc,out length); break;
                case E_EntityOfTransform3D.Enemy: return _GetAllEnemy_Transform3D<float3>(_GetOffsetOfTransform3D_Position(),filterFunc,out length); break;
                case E_EntityOfTransform3D.Bullet: return _GetAllBullet_Transform3D<float3>(_GetOffsetOfTransform3D_Position(),filterFunc,out length); break;
                case E_EntityOfTransform3D.BulletEmitter: return _GetAllBulletEmitter_Transform3D<float3>(_GetOffsetOfTransform3D_Position(),filterFunc,out length); break;
            }
            length = 0;return new NativeArray<float3>();
        }
        internal NativeArray<float3> GetAllTransform3D_Rotation(E_EntityOfTransform3D entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){
                case E_EntityOfTransform3D.PClassA: return _GetAllPClassA_Transform3D<float3>(_GetOffsetOfTransform3D_Rotation(),filterFunc,out length); break;
                case E_EntityOfTransform3D.SubClassA: return _GetAllSubClassA_Transform3D<float3>(_GetOffsetOfTransform3D_Rotation(),filterFunc,out length); break;
                case E_EntityOfTransform3D.SubClassB: return _GetAllSubClassB_Transform3D<float3>(_GetOffsetOfTransform3D_Rotation(),filterFunc,out length); break;
                case E_EntityOfTransform3D.Enemy: return _GetAllEnemy_Transform3D<float3>(_GetOffsetOfTransform3D_Rotation(),filterFunc,out length); break;
                case E_EntityOfTransform3D.Bullet: return _GetAllBullet_Transform3D<float3>(_GetOffsetOfTransform3D_Rotation(),filterFunc,out length); break;
                case E_EntityOfTransform3D.BulletEmitter: return _GetAllBulletEmitter_Transform3D<float3>(_GetOffsetOfTransform3D_Rotation(),filterFunc,out length); break;
            }
            length = 0;return new NativeArray<float3>();
        }
        internal NativeArray<float3> GetAllTransform3D_Scale(E_EntityOfTransform3D entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){
                case E_EntityOfTransform3D.PClassA: return _GetAllPClassA_Transform3D<float3>(_GetOffsetOfTransform3D_Scale(),filterFunc,out length); break;
                case E_EntityOfTransform3D.SubClassA: return _GetAllSubClassA_Transform3D<float3>(_GetOffsetOfTransform3D_Scale(),filterFunc,out length); break;
                case E_EntityOfTransform3D.SubClassB: return _GetAllSubClassB_Transform3D<float3>(_GetOffsetOfTransform3D_Scale(),filterFunc,out length); break;
                case E_EntityOfTransform3D.Enemy: return _GetAllEnemy_Transform3D<float3>(_GetOffsetOfTransform3D_Scale(),filterFunc,out length); break;
                case E_EntityOfTransform3D.Bullet: return _GetAllBullet_Transform3D<float3>(_GetOffsetOfTransform3D_Scale(),filterFunc,out length); break;
                case E_EntityOfTransform3D.BulletEmitter: return _GetAllBulletEmitter_Transform3D<float3>(_GetOffsetOfTransform3D_Scale(),filterFunc,out length); break;
            }
            length = 0;return new NativeArray<float3>();
        }

        internal NativeArray<MeshRenderData> GetAllMeshRenderData(E_EntityOfMeshRenderData entity){
            switch(entity){
                case E_EntityOfMeshRenderData.Bullet: return _GetAllBullet_MeshRenderData<MeshRenderData>(0); break;
                case E_EntityOfMeshRenderData.BulletEmitter: return _GetAllBulletEmitter_MeshRenderData<MeshRenderData>(0); break;
            }
            return new NativeArray<MeshRenderData>();
        }
        internal NativeArray<AnimRenderData> GetAllAnimRenderData(E_EntityOfAnimRenderData entity){
            switch(entity){
                case E_EntityOfAnimRenderData.Enemy: return _GetAllEnemy_AnimRenderData<AnimRenderData>(0); break;
            }
            return new NativeArray<AnimRenderData>();
        }
        internal NativeArray<PhysicData> GetAllPhysicData(E_EntityOfPhysicData entity){
            switch(entity){
                case E_EntityOfPhysicData.PClassA: return _GetAllPClassA_PhysicData<PhysicData>(0); break;
                case E_EntityOfPhysicData.SubClassA: return _GetAllSubClassA_PhysicData<PhysicData>(0); break;
                case E_EntityOfPhysicData.SubClassB: return _GetAllSubClassB_PhysicData<PhysicData>(0); break;
                case E_EntityOfPhysicData.Enemy: return _GetAllEnemy_PhysicData<PhysicData>(0); break;
                case E_EntityOfPhysicData.Bullet: return _GetAllBullet_PhysicData<PhysicData>(0); break;
                case E_EntityOfPhysicData.BulletEmitter: return _GetAllBulletEmitter_PhysicData<PhysicData>(0); break;
            }
            return new NativeArray<PhysicData>();
        }
        internal NativeArray<BasicData> GetAllBasicData(E_EntityOfBasicData entity){
            switch(entity){
                case E_EntityOfBasicData.PClassA: return _GetAllPClassA_BasicData<BasicData>(0); break;
                case E_EntityOfBasicData.SubClassA: return _GetAllSubClassA_BasicData<BasicData>(0); break;
                case E_EntityOfBasicData.SubClassB: return _GetAllSubClassB_BasicData<BasicData>(0); break;
                case E_EntityOfBasicData.Enemy: return _GetAllEnemy_BasicData<BasicData>(0); break;
                case E_EntityOfBasicData.Bullet: return _GetAllBullet_BasicData<BasicData>(0); break;
                case E_EntityOfBasicData.BulletEmitter: return _GetAllBulletEmitter_BasicData<BasicData>(0); break;
            }
            return new NativeArray<BasicData>();
        }
        internal NativeArray<EnemyTag> GetAllEnemyTag(E_EntityOfEnemyTag entity){
            switch(entity){
                case E_EntityOfEnemyTag.Enemy: return _GetAllEnemy_EnemyTag<EnemyTag>(0); break;
            }
            return new NativeArray<EnemyTag>();
        }
        internal NativeArray<BulletTag> GetAllBulletTag(E_EntityOfBulletTag entity){
            switch(entity){
                case E_EntityOfBulletTag.Bullet: return _GetAllBullet_BulletTag<BulletTag>(0); break;
            }
            return new NativeArray<BulletTag>();
        }
        internal NativeArray<SpawnerTag> GetAllSpawnerTag(E_EntityOfSpawnerTag entity){
            switch(entity){
                case E_EntityOfSpawnerTag.BulletEmitter: return _GetAllBulletEmitter_SpawnerTag<SpawnerTag>(0); break;
            }
            return new NativeArray<SpawnerTag>();
        }
        internal NativeArray<UnitData> GetAllUnitData(E_EntityOfUnitData entity){
            switch(entity){
                case E_EntityOfUnitData.Enemy: return _GetAllEnemy_UnitData<UnitData>(0); break;
                case E_EntityOfUnitData.Bullet: return _GetAllBullet_UnitData<UnitData>(0); break;
            }
            return new NativeArray<UnitData>();
        }
        internal NativeArray<EmitterData> GetAllEmitterData(E_EntityOfEmitterData entity){
            switch(entity){
                case E_EntityOfEmitterData.BulletEmitter: return _GetAllBulletEmitter_EmitterData<EmitterData>(0); break;
            }
            return new NativeArray<EmitterData>();
        }
        internal NativeArray<AIData> GetAllAIData(E_EntityOfAIData entity){
            switch(entity){
                case E_EntityOfAIData.Enemy: return _GetAllEnemy_AIData<AIData>(0); break;
            }
            return new NativeArray<AIData>();
        }
        internal NativeArray<AnimData> GetAllAnimData(E_EntityOfAnimData entity){
            switch(entity){
                case E_EntityOfAnimData.Enemy: return _GetAllEnemy_AnimData<AnimData>(0); break;
            }
            return new NativeArray<AnimData>();
        }
        internal NativeArray<Animator> GetAllAnimator(E_EntityOfAnimator entity){
            switch(entity){

            }
            return new NativeArray<Animator>();
        }
        internal NativeArray<CollisionAgent> GetAllCollisionAgent(E_EntityOfCollisionAgent entity){
            switch(entity){

            }
            return new NativeArray<CollisionAgent>();
        }
        internal NativeArray<NavMeshAgent> GetAllNavMeshAgent(E_EntityOfNavMeshAgent entity){
            switch(entity){

            }
            return new NativeArray<NavMeshAgent>();
        }
        internal NativeArray<AssetData> GetAllAssetData(E_EntityOfAssetData entity){
            switch(entity){
                case E_EntityOfAssetData.PClassA: return _GetAllPClassA_AssetData<AssetData>(0); break;
                case E_EntityOfAssetData.SubClassA: return _GetAllSubClassA_AssetData<AssetData>(0); break;
                case E_EntityOfAssetData.SubClassB: return _GetAllSubClassB_AssetData<AssetData>(0); break;
                case E_EntityOfAssetData.Enemy: return _GetAllEnemy_AssetData<AssetData>(0); break;
                case E_EntityOfAssetData.Bullet: return _GetAllBullet_AssetData<AssetData>(0); break;
                case E_EntityOfAssetData.BulletEmitter: return _GetAllBulletEmitter_AssetData<AssetData>(0); break;
            }
            return new NativeArray<AssetData>();
        }
        internal NativeArray<Transform2D> GetAllTransform2D(E_EntityOfTransform2D entity){
            switch(entity){

            }
            return new NativeArray<Transform2D>();
        }
        internal NativeArray<Transform3D> GetAllTransform3D(E_EntityOfTransform3D entity){
            switch(entity){
                case E_EntityOfTransform3D.PClassA: return _GetAllPClassA_Transform3D<Transform3D>(0); break;
                case E_EntityOfTransform3D.SubClassA: return _GetAllSubClassA_Transform3D<Transform3D>(0); break;
                case E_EntityOfTransform3D.SubClassB: return _GetAllSubClassB_Transform3D<Transform3D>(0); break;
                case E_EntityOfTransform3D.Enemy: return _GetAllEnemy_Transform3D<Transform3D>(0); break;
                case E_EntityOfTransform3D.Bullet: return _GetAllBullet_Transform3D<Transform3D>(0); break;
                case E_EntityOfTransform3D.BulletEmitter: return _GetAllBulletEmitter_Transform3D<Transform3D>(0); break;
            }
            return new NativeArray<Transform3D>();
        }



        internal NativeArray<MeshRenderData> GetAllMeshRenderData(E_EntityOfMeshRenderData entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){
                case E_EntityOfMeshRenderData.Bullet: return _GetAllBullet_MeshRenderData<MeshRenderData>(0,filterFunc,out length); break;
                case E_EntityOfMeshRenderData.BulletEmitter: return _GetAllBulletEmitter_MeshRenderData<MeshRenderData>(0,filterFunc,out length); break;
            }
            length = 0;
            return new NativeArray<MeshRenderData>();
        }
        internal NativeArray<AnimRenderData> GetAllAnimRenderData(E_EntityOfAnimRenderData entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){
                case E_EntityOfAnimRenderData.Enemy: return _GetAllEnemy_AnimRenderData<AnimRenderData>(0,filterFunc,out length); break;
            }
            length = 0;
            return new NativeArray<AnimRenderData>();
        }
        internal NativeArray<PhysicData> GetAllPhysicData(E_EntityOfPhysicData entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){
                case E_EntityOfPhysicData.PClassA: return _GetAllPClassA_PhysicData<PhysicData>(0,filterFunc,out length); break;
                case E_EntityOfPhysicData.SubClassA: return _GetAllSubClassA_PhysicData<PhysicData>(0,filterFunc,out length); break;
                case E_EntityOfPhysicData.SubClassB: return _GetAllSubClassB_PhysicData<PhysicData>(0,filterFunc,out length); break;
                case E_EntityOfPhysicData.Enemy: return _GetAllEnemy_PhysicData<PhysicData>(0,filterFunc,out length); break;
                case E_EntityOfPhysicData.Bullet: return _GetAllBullet_PhysicData<PhysicData>(0,filterFunc,out length); break;
                case E_EntityOfPhysicData.BulletEmitter: return _GetAllBulletEmitter_PhysicData<PhysicData>(0,filterFunc,out length); break;
            }
            length = 0;
            return new NativeArray<PhysicData>();
        }
        internal NativeArray<BasicData> GetAllBasicData(E_EntityOfBasicData entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){
                case E_EntityOfBasicData.PClassA: return _GetAllPClassA_BasicData<BasicData>(0,filterFunc,out length); break;
                case E_EntityOfBasicData.SubClassA: return _GetAllSubClassA_BasicData<BasicData>(0,filterFunc,out length); break;
                case E_EntityOfBasicData.SubClassB: return _GetAllSubClassB_BasicData<BasicData>(0,filterFunc,out length); break;
                case E_EntityOfBasicData.Enemy: return _GetAllEnemy_BasicData<BasicData>(0,filterFunc,out length); break;
                case E_EntityOfBasicData.Bullet: return _GetAllBullet_BasicData<BasicData>(0,filterFunc,out length); break;
                case E_EntityOfBasicData.BulletEmitter: return _GetAllBulletEmitter_BasicData<BasicData>(0,filterFunc,out length); break;
            }
            length = 0;
            return new NativeArray<BasicData>();
        }
        internal NativeArray<EnemyTag> GetAllEnemyTag(E_EntityOfEnemyTag entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){
                case E_EntityOfEnemyTag.Enemy: return _GetAllEnemy_EnemyTag<EnemyTag>(0,filterFunc,out length); break;
            }
            length = 0;
            return new NativeArray<EnemyTag>();
        }
        internal NativeArray<BulletTag> GetAllBulletTag(E_EntityOfBulletTag entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){
                case E_EntityOfBulletTag.Bullet: return _GetAllBullet_BulletTag<BulletTag>(0,filterFunc,out length); break;
            }
            length = 0;
            return new NativeArray<BulletTag>();
        }
        internal NativeArray<SpawnerTag> GetAllSpawnerTag(E_EntityOfSpawnerTag entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){
                case E_EntityOfSpawnerTag.BulletEmitter: return _GetAllBulletEmitter_SpawnerTag<SpawnerTag>(0,filterFunc,out length); break;
            }
            length = 0;
            return new NativeArray<SpawnerTag>();
        }
        internal NativeArray<UnitData> GetAllUnitData(E_EntityOfUnitData entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){
                case E_EntityOfUnitData.Enemy: return _GetAllEnemy_UnitData<UnitData>(0,filterFunc,out length); break;
                case E_EntityOfUnitData.Bullet: return _GetAllBullet_UnitData<UnitData>(0,filterFunc,out length); break;
            }
            length = 0;
            return new NativeArray<UnitData>();
        }
        internal NativeArray<EmitterData> GetAllEmitterData(E_EntityOfEmitterData entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){
                case E_EntityOfEmitterData.BulletEmitter: return _GetAllBulletEmitter_EmitterData<EmitterData>(0,filterFunc,out length); break;
            }
            length = 0;
            return new NativeArray<EmitterData>();
        }
        internal NativeArray<AIData> GetAllAIData(E_EntityOfAIData entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){
                case E_EntityOfAIData.Enemy: return _GetAllEnemy_AIData<AIData>(0,filterFunc,out length); break;
            }
            length = 0;
            return new NativeArray<AIData>();
        }
        internal NativeArray<AnimData> GetAllAnimData(E_EntityOfAnimData entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){
                case E_EntityOfAnimData.Enemy: return _GetAllEnemy_AnimData<AnimData>(0,filterFunc,out length); break;
            }
            length = 0;
            return new NativeArray<AnimData>();
        }
        internal NativeArray<Animator> GetAllAnimator(E_EntityOfAnimator entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){

            }
            length = 0;
            return new NativeArray<Animator>();
        }
        internal NativeArray<CollisionAgent> GetAllCollisionAgent(E_EntityOfCollisionAgent entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){

            }
            length = 0;
            return new NativeArray<CollisionAgent>();
        }
        internal NativeArray<NavMeshAgent> GetAllNavMeshAgent(E_EntityOfNavMeshAgent entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){

            }
            length = 0;
            return new NativeArray<NavMeshAgent>();
        }
        internal NativeArray<AssetData> GetAllAssetData(E_EntityOfAssetData entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){
                case E_EntityOfAssetData.PClassA: return _GetAllPClassA_AssetData<AssetData>(0,filterFunc,out length); break;
                case E_EntityOfAssetData.SubClassA: return _GetAllSubClassA_AssetData<AssetData>(0,filterFunc,out length); break;
                case E_EntityOfAssetData.SubClassB: return _GetAllSubClassB_AssetData<AssetData>(0,filterFunc,out length); break;
                case E_EntityOfAssetData.Enemy: return _GetAllEnemy_AssetData<AssetData>(0,filterFunc,out length); break;
                case E_EntityOfAssetData.Bullet: return _GetAllBullet_AssetData<AssetData>(0,filterFunc,out length); break;
                case E_EntityOfAssetData.BulletEmitter: return _GetAllBulletEmitter_AssetData<AssetData>(0,filterFunc,out length); break;
            }
            length = 0;
            return new NativeArray<AssetData>();
        }
        internal NativeArray<Transform2D> GetAllTransform2D(E_EntityOfTransform2D entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){

            }
            length = 0;
            return new NativeArray<Transform2D>();
        }
        internal NativeArray<Transform3D> GetAllTransform3D(E_EntityOfTransform3D entity,FuncEntityFilter<Entity> filterFunc,out int length){
            switch(entity){
                case E_EntityOfTransform3D.PClassA: return _GetAllPClassA_Transform3D<Transform3D>(0,filterFunc,out length); break;
                case E_EntityOfTransform3D.SubClassA: return _GetAllSubClassA_Transform3D<Transform3D>(0,filterFunc,out length); break;
                case E_EntityOfTransform3D.SubClassB: return _GetAllSubClassB_Transform3D<Transform3D>(0,filterFunc,out length); break;
                case E_EntityOfTransform3D.Enemy: return _GetAllEnemy_Transform3D<Transform3D>(0,filterFunc,out length); break;
                case E_EntityOfTransform3D.Bullet: return _GetAllBullet_Transform3D<Transform3D>(0,filterFunc,out length); break;
                case E_EntityOfTransform3D.BulletEmitter: return _GetAllBulletEmitter_Transform3D<Transform3D>(0,filterFunc,out length); break;
            }
            length = 0;
            return new NativeArray<Transform3D>();
        }


        internal int CurPClassACount => _PClassAAry.CurEntityCount;
        internal int MaxPClassAIndex => _PClassAAry.Length - 1;
        [MethodImpl(MethodImplOptions.AggressiveInlining)] internal unsafe PClassA* GetPClassA(int index) { return _PClassAAry.GetEntity(index); }
        [MethodImpl(MethodImplOptions.AggressiveInlining)] internal unsafe PClassA* GetPClassA(EntityRef entityRef){
            var ptr = _PClassAAry.GetEntity(entityRef._index);
            if (ptr->EntityRef != entityRef) return null;
            return ptr;
        } 
        internal int CurSubClassACount => _SubClassAAry.CurEntityCount;
        internal int MaxSubClassAIndex => _SubClassAAry.Length - 1;
        [MethodImpl(MethodImplOptions.AggressiveInlining)] internal unsafe SubClassA* GetSubClassA(int index) { return _SubClassAAry.GetEntity(index); }
        [MethodImpl(MethodImplOptions.AggressiveInlining)] internal unsafe SubClassA* GetSubClassA(EntityRef entityRef){
            var ptr = _SubClassAAry.GetEntity(entityRef._index);
            if (ptr->EntityRef != entityRef) return null;
            return ptr;
        } 
        internal int CurSubClassBCount => _SubClassBAry.CurEntityCount;
        internal int MaxSubClassBIndex => _SubClassBAry.Length - 1;
        [MethodImpl(MethodImplOptions.AggressiveInlining)] internal unsafe SubClassB* GetSubClassB(int index) { return _SubClassBAry.GetEntity(index); }
        [MethodImpl(MethodImplOptions.AggressiveInlining)] internal unsafe SubClassB* GetSubClassB(EntityRef entityRef){
            var ptr = _SubClassBAry.GetEntity(entityRef._index);
            if (ptr->EntityRef != entityRef) return null;
            return ptr;
        } 
        internal int CurEnemyCount => _EnemyAry.CurEntityCount;
        internal int MaxEnemyIndex => _EnemyAry.Length - 1;
        [MethodImpl(MethodImplOptions.AggressiveInlining)] internal unsafe Enemy* GetEnemy(int index) { return _EnemyAry.GetEntity(index); }
        [MethodImpl(MethodImplOptions.AggressiveInlining)] internal unsafe Enemy* GetEnemy(EntityRef entityRef){
            var ptr = _EnemyAry.GetEntity(entityRef._index);
            if (ptr->EntityRef != entityRef) return null;
            return ptr;
        } 
        internal int CurBulletCount => _BulletAry.CurEntityCount;
        internal int MaxBulletIndex => _BulletAry.Length - 1;
        [MethodImpl(MethodImplOptions.AggressiveInlining)] internal unsafe Bullet* GetBullet(int index) { return _BulletAry.GetEntity(index); }
        [MethodImpl(MethodImplOptions.AggressiveInlining)] internal unsafe Bullet* GetBullet(EntityRef entityRef){
            var ptr = _BulletAry.GetEntity(entityRef._index);
            if (ptr->EntityRef != entityRef) return null;
            return ptr;
        } 
        internal int CurBulletEmitterCount => _BulletEmitterAry.CurEntityCount;
        internal int MaxBulletEmitterIndex => _BulletEmitterAry.Length - 1;
        [MethodImpl(MethodImplOptions.AggressiveInlining)] internal unsafe BulletEmitter* GetBulletEmitter(int index) { return _BulletEmitterAry.GetEntity(index); }
        [MethodImpl(MethodImplOptions.AggressiveInlining)] internal unsafe BulletEmitter* GetBulletEmitter(EntityRef entityRef){
            var ptr = _BulletEmitterAry.GetEntity(entityRef._index);
            if (ptr->EntityRef != entityRef) return null;
            return ptr;
        }  

    }
}                                                                                                                                                                                                                                                                                     