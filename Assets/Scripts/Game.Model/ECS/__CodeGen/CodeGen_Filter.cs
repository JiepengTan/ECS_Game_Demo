
//------------------------------------------------------------------------------    
// <auto-generated>                                                                 
//     This code was generated by GamesTan.Tools.MacroExpansion, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null. 
//     https://github.com/JiepengTan/LockstepECS                                         
//     Changes to this file may cause incorrect behavior and will be lost if        
//     the code is regenerated.                                                     
// </auto-generated>                                                                
//------------------------------------------------------------------------------  

//Power by ME //src: https://github.com/JiepengTan/ME  

//#define DONT_USE_GENERATE_CODE                                                                 
                                                                                                 
using System.Linq;                                                                               
using System.Runtime.InteropServices;                                                            
using System;                                                                                    
using System.Collections.Generic;                                                                
using System.Collections;                                                                        
using System.Runtime.CompilerServices;                                                           
using Lockstep.Game;                                                                             
using Lockstep.Math;                                                                             
using Unity.Burst;                                                                               
using Unity.Mathematics;                                                                                                                                                                            
namespace GamesTan.ECS.Game {  
    [StructLayoutAttribute(LayoutKind.Sequential, Pack = Define.PackSize)]
    public unsafe partial struct MeshRenderDataFilter {
        public Entity* Entity;
        public MeshRenderData* MeshRenderData;
    }
    [StructLayoutAttribute(LayoutKind.Sequential, Pack = Define.PackSize)]
    public unsafe partial struct AnimRenderDataFilter {
        public Entity* Entity;
        public AnimRenderData* AnimRenderData;
    }
    [StructLayoutAttribute(LayoutKind.Sequential, Pack = Define.PackSize)]
    public unsafe partial struct PhysicDataFilter {
        public Entity* Entity;
        public PhysicData* PhysicData;
    }
    [StructLayoutAttribute(LayoutKind.Sequential, Pack = Define.PackSize)]
    public unsafe partial struct BasicDataFilter {
        public Entity* Entity;
        public BasicData* BasicData;
    }
    [StructLayoutAttribute(LayoutKind.Sequential, Pack = Define.PackSize)]
    public unsafe partial struct EnemyTagFilter {
        public Entity* Entity;
        public EnemyTag* EnemyTag;
    }
    [StructLayoutAttribute(LayoutKind.Sequential, Pack = Define.PackSize)]
    public unsafe partial struct BulletTagFilter {
        public Entity* Entity;
        public BulletTag* BulletTag;
    }
    [StructLayoutAttribute(LayoutKind.Sequential, Pack = Define.PackSize)]
    public unsafe partial struct SpawnerTagFilter {
        public Entity* Entity;
        public SpawnerTag* SpawnerTag;
    }
    [StructLayoutAttribute(LayoutKind.Sequential, Pack = Define.PackSize)]
    public unsafe partial struct UnitDataFilter {
        public Entity* Entity;
        public UnitData* UnitData;
    }
    [StructLayoutAttribute(LayoutKind.Sequential, Pack = Define.PackSize)]
    public unsafe partial struct EmitterDataFilter {
        public Entity* Entity;
        public EmitterData* EmitterData;
    }
    [StructLayoutAttribute(LayoutKind.Sequential, Pack = Define.PackSize)]
    public unsafe partial struct AIDataFilter {
        public Entity* Entity;
        public AIData* AIData;
    }
    [StructLayoutAttribute(LayoutKind.Sequential, Pack = Define.PackSize)]
    public unsafe partial struct AnimDataFilter {
        public Entity* Entity;
        public AnimData* AnimData;
    }
    [StructLayoutAttribute(LayoutKind.Sequential, Pack = Define.PackSize)]
    public unsafe partial struct AnimatorFilter {
        public Entity* Entity;
        public Animator* Animator;
    }
    [StructLayoutAttribute(LayoutKind.Sequential, Pack = Define.PackSize)]
    public unsafe partial struct CollisionAgentFilter {
        public Entity* Entity;
        public CollisionAgent* CollisionAgent;
    }
    [StructLayoutAttribute(LayoutKind.Sequential, Pack = Define.PackSize)]
    public unsafe partial struct NavMeshAgentFilter {
        public Entity* Entity;
        public NavMeshAgent* NavMeshAgent;
    }
    [StructLayoutAttribute(LayoutKind.Sequential, Pack = Define.PackSize)]
    public unsafe partial struct AssetDataFilter {
        public Entity* Entity;
        public AssetData* AssetData;
    }
    [StructLayoutAttribute(LayoutKind.Sequential, Pack = Define.PackSize)]
    public unsafe partial struct Transform2DFilter {
        public Entity* Entity;
        public Transform2D* Transform2D;
    }
    [StructLayoutAttribute(LayoutKind.Sequential, Pack = Define.PackSize)]
    public unsafe partial struct Transform3DFilter {
        public Entity* Entity;
        public Transform3D* Transform3D;
    } 
}                                                                                                                                                                                                                                                                                     