
//------------------------------------------------------------------------------    
// <auto-generated>                                                                 
//     This code was generated by GamesTan.Tools.MacroExpansion, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null. 
//     https://github.com/JiepengTan/LockstepECS                                         
//     Changes to this file may cause incorrect behavior and will be lost if        
//     the code is regenerated.                                                     
// </auto-generated>                                                                
//------------------------------------------------------------------------------  

//Power by ME //src: https://github.com/JiepengTan/ME  

//#define DONT_USE_GENERATE_CODE                                                                 
                                                                                                 
using System.Linq;                                                                               
using System.Runtime.InteropServices;                                                            
using System;                                                                                    
using System.Collections.Generic;                                                                
using System.Collections;                                                                        
using System.Runtime.CompilerServices;                                                           
using Lockstep.Game;                                                                             
using Unity.Burst;                                                                               
using Lockstep.Math;                                                                             
using Unity.Mathematics;                                                                                                                                                                            
namespace GamesTan.ECS.Game {  
    public unsafe partial struct Enemy :IEntity {
        public bool HasComponent(EComponentType compType){
            return EntityUtil._EnemyComponentSet[(int)compType];
        }
    }
    public unsafe partial struct Bullet :IEntity {
        public bool HasComponent(EComponentType compType){
            return EntityUtil._BulletComponentSet[(int)compType];
        }
    }
    public unsafe partial struct BulletEmitter :IEntity {
        public bool HasComponent(EComponentType compType){
            return EntityUtil._BulletEmitterComponentSet[(int)compType];
        }
    } 

    public static unsafe partial class EntityUtil {
        public static MeshRenderData* GetMeshRenderData(Entity* ptr){
            if(!HasComponent(ptr,EComponentType.MeshRenderData)){
                return null;
            }
            switch (ptr->_ref._type) {
 
                case EntityIds.Bullet: return &(((Bullet* )(ptr))->MeshRenderData); 
                case EntityIds.BulletEmitter: return &(((BulletEmitter* )(ptr))->MeshRenderData);   
            }
            return null;
        }
        public static AnimRenderData* GetAnimRenderData(Entity* ptr){
            if(!HasComponent(ptr,EComponentType.AnimRenderData)){
                return null;
            }
            switch (ptr->_ref._type) {
                case EntityIds.Enemy: return &(((Enemy* )(ptr))->AnimRenderData); 
 
   
            }
            return null;
        }
        public static PhysicData* GetPhysicData(Entity* ptr){
            if(!HasComponent(ptr,EComponentType.PhysicData)){
                return null;
            }
            switch (ptr->_ref._type) {
                case EntityIds.Enemy: return &(((Enemy* )(ptr))->PhysicData); 
                case EntityIds.Bullet: return &(((Bullet* )(ptr))->PhysicData); 
                case EntityIds.BulletEmitter: return &(((BulletEmitter* )(ptr))->PhysicData);   
            }
            return null;
        }
        public static BasicData* GetBasicData(Entity* ptr){
            if(!HasComponent(ptr,EComponentType.BasicData)){
                return null;
            }
            switch (ptr->_ref._type) {
                case EntityIds.Enemy: return &(((Enemy* )(ptr))->BasicData); 
                case EntityIds.Bullet: return &(((Bullet* )(ptr))->BasicData); 
                case EntityIds.BulletEmitter: return &(((BulletEmitter* )(ptr))->BasicData);   
            }
            return null;
        }
        public static EnemyTag* GetEnemyTag(Entity* ptr){
            if(!HasComponent(ptr,EComponentType.EnemyTag)){
                return null;
            }
            switch (ptr->_ref._type) {
                case EntityIds.Enemy: return &(((Enemy* )(ptr))->EnemyTag); 
 
   
            }
            return null;
        }
        public static BulletTag* GetBulletTag(Entity* ptr){
            if(!HasComponent(ptr,EComponentType.BulletTag)){
                return null;
            }
            switch (ptr->_ref._type) {
 
                case EntityIds.Bullet: return &(((Bullet* )(ptr))->BulletTag); 
   
            }
            return null;
        }
        public static SpawnerTag* GetSpawnerTag(Entity* ptr){
            if(!HasComponent(ptr,EComponentType.SpawnerTag)){
                return null;
            }
            switch (ptr->_ref._type) {
 
 
                case EntityIds.BulletEmitter: return &(((BulletEmitter* )(ptr))->SpawnerTag);   
            }
            return null;
        }
        public static UnitData* GetUnitData(Entity* ptr){
            if(!HasComponent(ptr,EComponentType.UnitData)){
                return null;
            }
            switch (ptr->_ref._type) {
                case EntityIds.Enemy: return &(((Enemy* )(ptr))->UnitData); 
                case EntityIds.Bullet: return &(((Bullet* )(ptr))->UnitData); 
   
            }
            return null;
        }
        public static EmitterData* GetEmitterData(Entity* ptr){
            if(!HasComponent(ptr,EComponentType.EmitterData)){
                return null;
            }
            switch (ptr->_ref._type) {
 
 
                case EntityIds.BulletEmitter: return &(((BulletEmitter* )(ptr))->EmitterData);   
            }
            return null;
        }
        public static AIData* GetAIData(Entity* ptr){
            if(!HasComponent(ptr,EComponentType.AIData)){
                return null;
            }
            switch (ptr->_ref._type) {
                case EntityIds.Enemy: return &(((Enemy* )(ptr))->AIData); 
 
   
            }
            return null;
        }
        public static AnimData* GetAnimData(Entity* ptr){
            if(!HasComponent(ptr,EComponentType.AnimData)){
                return null;
            }
            switch (ptr->_ref._type) {
                case EntityIds.Enemy: return &(((Enemy* )(ptr))->AnimData); 
 
   
            }
            return null;
        }
        public static Animator* GetAnimator(Entity* ptr){
            if(!HasComponent(ptr,EComponentType.Animator)){
                return null;
            }
            switch (ptr->_ref._type) {
 
 
   
            }
            return null;
        }
        public static CollisionAgent* GetCollisionAgent(Entity* ptr){
            if(!HasComponent(ptr,EComponentType.CollisionAgent)){
                return null;
            }
            switch (ptr->_ref._type) {
 
 
   
            }
            return null;
        }
        public static NavMeshAgent* GetNavMeshAgent(Entity* ptr){
            if(!HasComponent(ptr,EComponentType.NavMeshAgent)){
                return null;
            }
            switch (ptr->_ref._type) {
 
 
   
            }
            return null;
        }
        public static AssetData* GetAssetData(Entity* ptr){
            if(!HasComponent(ptr,EComponentType.AssetData)){
                return null;
            }
            switch (ptr->_ref._type) {
                case EntityIds.Enemy: return &(((Enemy* )(ptr))->AssetData); 
                case EntityIds.Bullet: return &(((Bullet* )(ptr))->AssetData); 
                case EntityIds.BulletEmitter: return &(((BulletEmitter* )(ptr))->AssetData);   
            }
            return null;
        }
        public static Transform2D* GetTransform2D(Entity* ptr){
            if(!HasComponent(ptr,EComponentType.Transform2D)){
                return null;
            }
            switch (ptr->_ref._type) {
 
 
   
            }
            return null;
        }
        public static Transform3D* GetTransform3D(Entity* ptr){
            if(!HasComponent(ptr,EComponentType.Transform3D)){
                return null;
            }
            switch (ptr->_ref._type) {
                case EntityIds.Enemy: return &(((Enemy* )(ptr))->TransformData); 
                case EntityIds.Bullet: return &(((Bullet* )(ptr))->TransformData); 
                case EntityIds.BulletEmitter: return &(((BulletEmitter* )(ptr))->TransformData);   
            }
            return null;
        } 


        public static bool HasComponent(Entity* ptr, EComponentType compType){
            var set = _allComponentSet[ptr->_ref._type];
            if(set != null){
                return set[(int)compType];
            }
            return false;
        }

        public static bool[] _EnemyComponentSet = new bool[]{ 
                false,//None
                false,//MeshRenderData
                true,//AnimRenderData
                true,//PhysicData
                true,//BasicData
                true,//EnemyTag
                false,//BulletTag
                false,//SpawnerTag
                true,//UnitData
                false,//EmitterData
                true,//AIData
                true,//AnimData
                false,//Animator
                false,//CollisionAgent
                false,//NavMeshAgent
                true,//AssetData
                false,//Transform2D
                true,//Transform3D
                false
        };
        public static bool[] _BulletComponentSet = new bool[]{ 
                false,//None
                true,//MeshRenderData
                false,//AnimRenderData
                true,//PhysicData
                true,//BasicData
                false,//EnemyTag
                true,//BulletTag
                false,//SpawnerTag
                true,//UnitData
                false,//EmitterData
                false,//AIData
                false,//AnimData
                false,//Animator
                false,//CollisionAgent
                false,//NavMeshAgent
                true,//AssetData
                false,//Transform2D
                true,//Transform3D
                false
        };
        public static bool[] _BulletEmitterComponentSet = new bool[]{ 
                false,//None
                true,//MeshRenderData
                false,//AnimRenderData
                true,//PhysicData
                true,//BasicData
                false,//EnemyTag
                false,//BulletTag
                true,//SpawnerTag
                false,//UnitData
                true,//EmitterData
                false,//AIData
                false,//AnimData
                false,//Animator
                false,//CollisionAgent
                false,//NavMeshAgent
                true,//AssetData
                false,//Transform2D
                true,//Transform3D
                false
        };  
        
        private static bool[][] _allComponentSet = new bool[][]{
            null,
            EntityUtil._EnemyComponentSet,
            EntityUtil._BulletComponentSet,
            EntityUtil._BulletEmitterComponentSet,  
            null,
        };
    }
}
                                                                                                                                                                                                                                                                                     